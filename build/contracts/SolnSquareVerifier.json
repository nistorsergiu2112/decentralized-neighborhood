{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "verifierAddress",
          "type": "address"
        }
      ],
      "name": "CreateSolution",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "fromAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "toAddress",
          "type": "address"
        }
      ],
      "name": "EventTransferOwnership",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "emittingAddress",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "emittingAddress",
          "type": "address"
        }
      ],
      "name": "UnPaused",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "flag",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSolutionsNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Pairing.G1Point",
              "name": "a",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256[2]",
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "internalType": "uint256[2]",
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ],
              "internalType": "struct Pairing.G2Point",
              "name": "b",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Pairing.G1Point",
              "name": "c",
              "type": "tuple"
            }
          ],
          "internalType": "struct Verifier.Proof",
          "name": "proof",
          "type": "tuple"
        },
        {
          "internalType": "uint256[2]",
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "mintVerifySol",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"verifierAddress\",\"type\":\"address\"}],\"name\":\"CreateSolution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"}],\"name\":\"EventTransferOwnership\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"emittingAddress\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"emittingAddress\",\"type\":\"address\"}],\"name\":\"UnPaused\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSolutionsNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"a\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct Pairing.G2Point\",\"name\":\"b\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"c\",\"type\":\"tuple\"}],\"internalType\":\"struct Verifier.Proof\",\"name\":\"proof\",\"type\":\"tuple\"},{\"internalType\":\"uint256[2]\",\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"mintVerifySol\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"flag\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"project:/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0xfed6e9fc58853823e44d59b1790488337e4aa3996792c3fcee30387106a70a85\",\"urls\":[\"bzz-raw://5ec8945c6fe986b9c965a3661f5e3ab239d945facfa4c2682740f687f462ee7d\",\"dweb:/ipfs/QmeNVZo1Mkttxq99wmfK1n6r6xJfDGCcAKEVNX4zYsqJE1\"]},\"project:/contracts/Oraclize.sol\":{\"keccak256\":\"0xe5ebe286b4624095629f76c6ac8dbad3cb305fbdb43fff09e4eebed35a05b49c\",\"urls\":[\"bzz-raw://681373c60944fa44771ccea64da3a0e1b428255757df53cfee06eae96f4ac91d\",\"dweb:/ipfs/QmWS7E26x3aXyYEZSzhTTpr8Pu11y5NK9p9iMwwvm7tMsz\"]},\"project:/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0xec01e5ebf3360ef642c56bb2e910e4e8e34eba79aff0bc54c6469d4e355a0e3d\",\"urls\":[\"bzz-raw://792a484651b64ba5ac8658847842fffa744309e6350577dba78431a0906adddc\",\"dweb:/ipfs/QmbwbgmBBKz28GJqnkrRaD9cu849ZCmykDzR5XWvTjXZz4\"]},\"project:/contracts/Verifier.sol\":{\"keccak256\":\"0x6b3a957b59f95d7baadb1f2be952af183b5d71b81c1e114d0e751493bb566c58\",\"urls\":[\"bzz-raw://361efe22079fc8ff7b07675ca9f902bd63128321a1b8fae33f84a760705b4728\",\"dweb:/ipfs/QmUwSybJier68izHHvnJriPzepioxktetzekvfAoRXwVhh\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060600160405280603f815260200162005119603f91396014908051906020019062000035929190620003ac565b5060006017553480156200004857600080fd5b50604051620051583803806200515883398181016040526200006e9190810190620004c5565b8181818160148054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200010c5780601f10620000e0576101008083540402835291602001916200010c565b820191906000526020600020905b815481529060010190602001808311620000ee57829003601f168201915b5050505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc725865e7cdcd866e230cd3a87b0f9178cebce0a4f3d2d2e026474a1e2ee44396000336040516200018592919062000549565b60405180910390a160008060146101000a81548160ff021916908315150217905550620001bf6301ffc9a760e01b6200030c60201b60201c565b620001d76380ac58cd60e01b6200030c60201b60201c565b620001ef63780e9d6360e01b6200030c60201b60201c565b82600f908051906020019062000207929190620003ac565b50816010908051906020019062000220929190620003ac565b50806011908051906020019062000239929190620003ac565b5062000252635b5e139f60e01b6200030c60201b60201c565b50505033601360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050604051620002a69062000433565b604051809103906000f080158015620002c3573d6000803e3d6000fd5b50601560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000663565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156200034057600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003ef57805160ff191683800117855562000420565b8280016001018555821562000420579182015b828111156200041f57825182559160200191906001019062000402565b5b5090506200042f919062000441565b5090565b6110df806200403a83390190565b6200046691905b808211156200046257600081600090555060010162000448565b5090565b90565b600082601f8301126200047b57600080fd5b8151620004926200048c82620005a4565b62000576565b91508082526020830160208301858383011115620004af57600080fd5b620004bc8382846200062d565b50505092915050565b60008060408385031215620004d957600080fd5b600083015167ffffffffffffffff811115620004f457600080fd5b620005028582860162000469565b925050602083015167ffffffffffffffff8111156200052057600080fd5b6200052e8582860162000469565b9150509250929050565b6200054381620005f1565b82525050565b600060408201905062000560600083018562000538565b6200056f602083018462000538565b9392505050565b6000604051905081810181811067ffffffffffffffff821117156200059a57600080fd5b8060405250919050565b600067ffffffffffffffff821115620005bc57600080fd5b601f19601f8301169050602081019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005fe8262000605565b9050919050565b6000620006128262000619565b9050919050565b60006200062682620005d1565b9050919050565b60005b838110156200064d57808201518184015260208101905062000630565b838111156200065d576000848401525b50505050565b6139c780620006736000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80634f6ccce7116100de578063b88d4fde11610097578063cc79253211610071578063cc7925321461046e578063d547cfb71461048a578063e985e9c5146104a8578063f2fde38b146104d857610173565b8063b88d4fde14610404578063c778d51e14610420578063c87b56dd1461043e57610173565b80634f6ccce71461031c5780636352211e1461034c57806370a082311461037c578063893d20e8146103ac57806395d89b41146103ca578063a22cb465146103e857610173565b806323b872dd1161013057806323b872dd1461024c57806327dc297e146102685780632f745c591461028457806338bbfa50146102b457806340c10f19146102d057806342842e0e1461030057610173565b806301ffc9a71461017857806306fdde03146101a8578063081812fc146101c6578063095ea7b3146101f657806316c38b3c1461021257806318160ddd1461022e575b600080fd5b610192600480360361018d9190810190612d36565b6104f4565b60405161019f919061345c565b60405180910390f35b6101b061055c565b6040516101bd9190613477565b60405180910390f35b6101e060048036036101db9190810190612d88565b6105fe565b6040516101ed91906133b1565b60405180910390f35b610210600480360361020b9190810190612b70565b61063b565b005b61022c60048036036102279190810190612c11565b6107f0565b005b610236610927565b604051610243919061366b565b60405180910390f35b61026660048036036102619190810190612a6a565b610934565b005b610282600480360361027d9190810190612c63565b610957565b005b61029e60048036036102999190810190612b70565b61099a565b6040516102ab919061366b565b60405180910390f35b6102ce60048036036102c99190810190612cb7565b610a0d565b005b6102ea60048036036102e59190810190612b70565b610a12565b6040516102f7919061345c565b60405180910390f35b61031a60048036036103159190810190612a6a565b610ac2565b005b61033660048036036103319190810190612d88565b610ae2565b604051610343919061366b565b60405180910390f35b61036660048036036103619190810190612d88565b610b16565b60405161037391906133b1565b60405180910390f35b61039660048036036103919190810190612a05565b610b53565b6040516103a3919061366b565b60405180910390f35b6103b4610ba3565b6040516103c191906133b1565b60405180910390f35b6103d2610bcc565b6040516103df9190613477565b60405180910390f35b61040260048036036103fd9190810190612b34565b610c6e565b005b61041e60048036036104199190810190612ab9565b610da4565b005b610428610dca565b604051610435919061366b565b60405180910390f35b61045860048036036104539190810190612d88565b610dd4565b6040516104659190613477565b60405180910390f35b61048860048036036104839190810190612bac565b610e9b565b005b610492611093565b60405161049f9190613477565b60405180910390f35b6104c260048036036104bd9190810190612a2e565b611135565b6040516104cf919061345c565b60405180910390f35b6104f260048036036104ed9190810190612a05565b6111c9565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105f45780601f106105c9576101008083540402835291602001916105f4565b820191906000526020600020905b8154815290600101906020018083116105d757829003601f168201915b5050505050905090565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff1661065b82610b16565b73ffffffffffffffffffffffffffffffffffffffff1614156106b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a990613539565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166106d1610ba3565b73ffffffffffffffffffffffffffffffffffffffff16148061070057506106ff6106f9610ba3565b33611135565b5b61073f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073690613559565b60405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b336000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610880576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087790613579565b60405180910390fd5b81600060146101000a81548160ff021916908315150217905550600060149054906101000a900460ff16156108eb577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336040516108de91906133cc565b60405180910390a1610923565b7fff2b959f2bcdb44c7ecb4b16dae055431019d7350607125cfc2b74a06632c90e3360405161091a91906133cc565b60405180910390a15b5050565b6000600880549050905090565b61093e338261136b565b61094757600080fd5b610952838383611400565b505050565b610996828260006040519080825280601f01601f1916602001820160405280156109905781602001600182028038833980820191505090505b50610a0d565b5050565b60006109a583610b53565b82106109b057600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106109fa57fe5b9060005260206000200154905092915050565b505050565b6000336000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610aa4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9b90613579565b60405180910390fd5b610aae8484611424565b610ab783611445565b600191505092915050565b610add83838360405180602001604052806000815250610da4565b505050565b6000610aec610927565b8210610af757600080fd5b60088281548110610b0457fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610b9c600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611563565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060108054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c645780601f10610c3957610100808354040283529160200191610c64565b820191906000526020600020905b815481529060010190602001808311610c4757829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ca757600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610d98919061345c565b60405180910390a35050565b610daf848484610934565b610dbb84848484611571565b610dc457600080fd5b50505050565b6000601754905090565b6060610ddf82611688565b610de857600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e8f5780601f10610e6457610100808354040283529160200191610e8f565b820191906000526020600020905b815481529060010190602001808311610e7257829003601f168201915b50505050509050919050565b600082600001518360200151846040015184604051602001610ec094939291906135f9565b6040516020818303038152906040528051906020012090506000601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd76fc85856040518363ffffffff1660e01b8152600401610f37929190613640565b60206040518083038186803b158015610f4f57600080fd5b505afa158015610f63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610f879190810190612c3a565b9050600073ffffffffffffffffffffffffffffffffffffffff166018600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461102e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611025906135d9565b60405180910390fd5b6001151581151514611075576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106c906134f9565b60405180910390fd5b6110808587846116fa565b61108a8686610a12565b50505050505050565b606060118054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561112b5780601f106111005761010080835404028352916020019161112b565b820191906000526020600020905b81548152906001019060200180831161110e57829003601f168201915b5050505050905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b336000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611259576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125090613579565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146112c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112be906134b9565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc725865e7cdcd866e230cd3a87b0f9178cebce0a4f3d2d2e026474a1e2ee4439818460405161135e929190613433565b60405180910390a1505050565b60008061137783610b16565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806113e657508373ffffffffffffffffffffffffffffffffffffffff166113ce846105fe565b73ffffffffffffffffffffffffffffffffffffffff16145b806113f757506113f68185611135565b5b91505092915050565b61140b838383611919565b6114158382611b48565b61141f8282611ce6565b505050565b61142e8282611dad565b6114388282611ce6565b61144181611f2d565b5050565b61144e81611688565b61148d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148490613599565b60405180910390fd5b61153960118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115265780601f106114fb57610100808354040283529160200191611526565b820191906000526020600020905b81548152906001019060200180831161150957829003601f168201915b505050505061153483611f79565b6120a6565b60126000838152602001908152602001600020908051906020019061155f9291906125e8565b5050565b600081600001549050919050565b60006115928473ffffffffffffffffffffffffffffffffffffffff166120ea565b61159f5760019050611680565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b81526004016115e094939291906133e7565b602060405180830381600087803b1580156115fa57600080fd5b505af115801561160e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116329190810190612d5f565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600073ffffffffffffffffffffffffffffffffffffffff166018600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461179f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611796906135d9565b60405180910390fd5b6117b5600160175461213590919063ffffffff16565b6017819055506117c3612668565b60405180604001604052808581526020018473ffffffffffffffffffffffffffffffffffffffff168152509050601681908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505080601860008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507feee56a272e033e551b01fd6651d600222e9bca4956e1b6adcca67c56c267bf4a848460405161190b929190613686565b60405180910390a150505050565b8273ffffffffffffffffffffffffffffffffffffffff1661193982610b16565b73ffffffffffffffffffffffffffffffffffffffff161461198f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161198690613519565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156119ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119f6906135b9565b60405180910390fd5b611a088161218a565b611a4f600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612248565b611a96600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061225e565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611ba06001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061228190919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114611c8d576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611c0d57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611c6557fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611cdf9190612698565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b60011515611dba82611688565b15151480611df55750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b611e34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e2b90613499565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611ecd600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612248565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415611fc1576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506120a1565b600082905060005b60008214611feb578080600101915050600a8281611fe357fe5b049150611fc9565b6060816040519080825280601f01601f1916602001820160405280156120205781602001600182028038833980820191505090505b50905060006001830390505b6000861461209957600a868161203e57fe5b0660300160f81b8282806001900393508151811061205857fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868161209157fe5b04955061202c565b819450505050505b919050565b60606120e283836040518060200160405280600081525060405180602001604052806000815250604051806020016040528060008152506122cb565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561212c57506000801b8214155b92505050919050565b600080828401905083811015612180576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612177906134d9565b60405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146122455760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6001816000016000828254019250508190555050565b6122766001826000015461228190919063ffffffff16565b816000018190555050565b60006122c383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061258d565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156123275781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b88518110156123ac5788818151811061235357fe5b602001015160f81c60f81b83838060010194508151811061237057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061233e565b600090505b875181101561241f578781815181106123c657fe5b602001015160f81c60f81b8383806001019450815181106123e357fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506123b1565b600090505b86518110156124925786818151811061243957fe5b602001015160f81c60f81b83838060010194508151811061245657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612424565b600090505b8551811015612505578581815181106124ac57fe5b602001015160f81c60f81b8383806001019450815181106124c957fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612497565b600090505b84518110156125785784818151811061251f57fe5b602001015160f81c60f81b83838060010194508151811061253c57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061250a565b82995050505050505050505095945050505050565b60008383111582906125d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125cc9190613477565b60405180910390fd5b5060008385039050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061262957805160ff1916838001178555612657565b82800160010185558215612657579182015b8281111561265657825182559160200191906001019061263b565b5b50905061266491906126c4565b5090565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b8154818355818111156126bf578183600052602060002091820191016126be91906126c4565b5b505050565b6126e691905b808211156126e25760008160009055506001016126ca565b5090565b90565b6000813590506126f881613911565b92915050565b600082601f83011261270f57600080fd5b600261272261271d826136dc565b6136af565b9150818385602084028201111561273857600080fd5b60005b83811015612768578161274e88826129f0565b84526020840193506020830192505060018101905061273b565b5050505092915050565b600082601f83011261278357600080fd5b6002612796612791826136fe565b6136af565b915081838560208402820111156127ac57600080fd5b60005b838110156127dc57816127c288826129f0565b8452602084019350602083019250506001810190506127af565b5050505092915050565b6000813590506127f581613928565b92915050565b60008151905061280a81613928565b92915050565b60008135905061281f8161393f565b92915050565b60008135905061283481613956565b92915050565b60008151905061284981613956565b92915050565b600082601f83011261286057600080fd5b813561287361286e82613720565b6136af565b9150808252602083016020830185838301111561288f57600080fd5b61289a8382846138be565b50505092915050565b600082601f8301126128b457600080fd5b81356128c76128c28261374c565b6136af565b915080825260208301602083018583830111156128e357600080fd5b6128ee8382846138be565b50505092915050565b60006040828403121561290957600080fd5b61291360406136af565b90506000612923848285016129f0565b6000830152506020612937848285016129f0565b60208301525092915050565b60006080828403121561295557600080fd5b61295f60406136af565b9050600061296f848285016126fe565b6000830152506040612983848285016126fe565b60208301525092915050565b600061010082840312156129a257600080fd5b6129ac60606136af565b905060006129bc848285016128f7565b60008301525060406129d084828501612943565b60208301525060c06129e4848285016128f7565b60408301525092915050565b6000813590506129ff8161396d565b92915050565b600060208284031215612a1757600080fd5b6000612a25848285016126e9565b91505092915050565b60008060408385031215612a4157600080fd5b6000612a4f858286016126e9565b9250506020612a60858286016126e9565b9150509250929050565b600080600060608486031215612a7f57600080fd5b6000612a8d868287016126e9565b9350506020612a9e868287016126e9565b9250506040612aaf868287016129f0565b9150509250925092565b60008060008060808587031215612acf57600080fd5b6000612add878288016126e9565b9450506020612aee878288016126e9565b9350506040612aff878288016129f0565b925050606085013567ffffffffffffffff811115612b1c57600080fd5b612b288782880161284f565b91505092959194509250565b60008060408385031215612b4757600080fd5b6000612b55858286016126e9565b9250506020612b66858286016127e6565b9150509250929050565b60008060408385031215612b8357600080fd5b6000612b91858286016126e9565b9250506020612ba2858286016129f0565b9150509250929050565b6000806000806101808587031215612bc357600080fd5b6000612bd1878288016126e9565b9450506020612be2878288016129f0565b9350506040612bf38782880161298f565b925050610140612c0587828801612772565b91505092959194509250565b600060208284031215612c2357600080fd5b6000612c31848285016127e6565b91505092915050565b600060208284031215612c4c57600080fd5b6000612c5a848285016127fb565b91505092915050565b60008060408385031215612c7657600080fd5b6000612c8485828601612810565b925050602083013567ffffffffffffffff811115612ca157600080fd5b612cad858286016128a3565b9150509250929050565b600080600060608486031215612ccc57600080fd5b6000612cda86828701612810565b935050602084013567ffffffffffffffff811115612cf757600080fd5b612d03868287016128a3565b925050604084013567ffffffffffffffff811115612d2057600080fd5b612d2c8682870161284f565b9150509250925092565b600060208284031215612d4857600080fd5b6000612d5684828501612825565b91505092915050565b600060208284031215612d7157600080fd5b6000612d7f8482850161283a565b91505092915050565b600060208284031215612d9a57600080fd5b6000612da8848285016129f0565b91505092915050565b6000612dbd8383613393565b60208301905092915050565b612dd281613888565b82525050565b612de18161380a565b82525050565b612df081613797565b612dfa81846137dd565b9250612e0582613782565b8060005b83811015612e36578151612e1d8782612db1565b9650612e28836137c5565b925050600181019050612e09565b505050505050565b612e478161378c565b612e5181846137d2565b9250612e5c82613778565b8060005b83811015612e8d578151612e748782612db1565b9650612e7f836137b8565b925050600181019050612e60565b505050505050565b612e9e8161381c565b82525050565b6000612eaf826137a2565b612eb981856137e8565b9350612ec98185602086016138cd565b612ed281613900565b840191505092915050565b6000612ee8826137ad565b612ef281856137f9565b9350612f028185602086016138cd565b612f0b81613900565b840191505092915050565b6000612f23602a836137f9565b91507f41646472657373206e6565647320746f2062652076616c696420616e6420746f60008301527f6b656e20756e69717565000000000000000000000000000000000000000000006020830152604082019050919050565b6000612f89600f836137f9565b91507f496e76616c6964206164647265737300000000000000000000000000000000006000830152602082019050919050565b6000612fc9601b836137f9565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b60006130096012836137f9565b91507f50726f6f66206973206e6f742076616c696400000000000000000000000000006000830152602082019050919050565b6000613049601f836137f9565b91507f546f6b656e206973206e6f74206f776e656420627920726571756573746572006000830152602082019050919050565b6000613089603b836137f9565b91507f476976656e20616464726573732073686f756c64206e6f74206265206571756160008301527f6c20746f20746865206f776e6572206f662074686520746f6b656e00000000006020830152604082019050919050565b60006130ef6045836137f9565b91507f546f206170726f7665206120746f6b656e207472616e736665722c20796f752060008301527f6e65656420746f20626520617070726f766564206279206f7220626520616e2060208301527f6f776e65720000000000000000000000000000000000000000000000000000006040830152606082019050919050565b600061317b6030836137f9565b91507f43616c6c696e672061646472657373206973206e6f7420746865204f776e657260008301527f206f662074686520636f6e7472616374000000000000000000000000000000006020830152604082019050919050565b60006131e16016836137f9565b91507f546f6b656e494420646f6573206e6f74206578697374000000000000000000006000830152602082019050919050565b60006132216015836137f9565b91507f546f206164647265737320697320696e76616c696400000000000000000000006000830152602082019050919050565b60006132616016836137f9565b91507f536f6c7574696f6e206973206e6f7420756e69717565000000000000000000006000830152602082019050919050565b6040820160008201516132aa6000850182613393565b5060208201516132bd6020850182613393565b50505050565b6040820160008201516132d96000850182613393565b5060208201516132ec6020850182613393565b50505050565b6080820160008201516133086000850182612e3e565b50602082015161331b6040850182612e3e565b50505050565b6080820160008201516133376000850182612e3e565b50602082015161334a6040850182612e3e565b50505050565b610100820160008201516133676000850182613294565b50602082015161337a60408501826132f2565b50604082015161338d60c0850182613294565b50505050565b61339c8161387e565b82525050565b6133ab8161387e565b82525050565b60006020820190506133c66000830184612dd8565b92915050565b60006020820190506133e16000830184612dc9565b92915050565b60006080820190506133fc6000830187612dc9565b6134096020830186612dd8565b61341660408301856133a2565b81810360608301526134288184612ea4565b905095945050505050565b60006040820190506134486000830185612dd8565b6134556020830184612dd8565b9392505050565b60006020820190506134716000830184612e95565b92915050565b600060208201905081810360008301526134918184612edd565b905092915050565b600060208201905081810360008301526134b281612f16565b9050919050565b600060208201905081810360008301526134d281612f7c565b9050919050565b600060208201905081810360008301526134f281612fbc565b9050919050565b6000602082019050818103600083015261351281612ffc565b9050919050565b600060208201905081810360008301526135328161303c565b9050919050565b600060208201905081810360008301526135528161307c565b9050919050565b60006020820190508181036000830152613572816130e2565b9050919050565b600060208201905081810360008301526135928161316e565b9050919050565b600060208201905081810360008301526135b2816131d4565b9050919050565b600060208201905081810360008301526135d281613214565b9050919050565b600060208201905081810360008301526135f281613254565b9050919050565b60006101408201905061360f60008301876132c3565b61361c6040830186613321565b61362960c08301856132c3565b613637610100830184612de7565b95945050505050565b6000610140820190506136566000830185613350565b613664610100830184612de7565b9392505050565b600060208201905061368060008301846133a2565b92915050565b600060408201905061369b60008301856133a2565b6136a86020830184612dd8565b9392505050565b6000604051905081810181811067ffffffffffffffff821117156136d257600080fd5b8060405250919050565b600067ffffffffffffffff8211156136f357600080fd5b602082029050919050565b600067ffffffffffffffff82111561371557600080fd5b602082029050919050565b600067ffffffffffffffff82111561373757600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561376357600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006138158261385e565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006138938261389a565b9050919050565b60006138a5826138ac565b9050919050565b60006138b78261385e565b9050919050565b82818337600083830152505050565b60005b838110156138eb5780820151818401526020810190506138d0565b838111156138fa576000848401525b50505050565b6000601f19601f8301169050919050565b61391a8161380a565b811461392557600080fd5b50565b6139318161381c565b811461393c57600080fd5b50565b61394881613828565b811461395357600080fd5b50565b61395f81613832565b811461396a57600080fd5b50565b6139768161387e565b811461398157600080fd5b5056fea365627a7a7231582056a42ad65f71191e402d5bc0c75cfe541860c576b3d11f98ec6cd6bfc42315206c6578706572696d656e74616cf564736f6c63430005100040608060405234801561001057600080fd5b506110bf806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806343cd76fc14610030575b600080fd5b61004a60048036036100459190810190610f76565b610060565b6040516100579190610fc3565b60405180910390f35b6000606060026040519080825280602002602001820160405280156100945781602001602082028038833980820191505090505b50905060008090505b60028110156100dc578381600281106100b257fe5b60200201518282815181106100c357fe5b602002602001018181525050808060010191505061009d565b5060006100e98286610105565b14156100f95760019150506100ff565b60009150505b92915050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019050610133610c57565b61013b610277565b905080608001515160018651011461015257600080fd5b61015a610c9e565b6040518060400160405280600081526020016000815250905060008090505b86518110156101f0578387828151811061018f57fe5b6020026020010151106101a157600080fd5b6101e1826101dc856080015160018501815181106101bb57fe5b60200260200101518a85815181106101cf57fe5b60200260200101516106c3565b610755565b91508080600101915050610179565b5061021381836080015160008151811061020657fe5b6020026020010151610755565b90506102598560000151866020015161022b84610806565b856040015161023d8a60400151610806565b876060015161024f8960000151610806565b89602001516108a0565b6102695760019350505050610271565b600093505050505b92915050565b61027f610c57565b60405180604001604052807e4f41017ecdfcc4b5026935d45d68e9993db7be5847db8b207abc110e28908181526020017f092732d3a6ae47875443a8e72537ed8a328534f44b636ecd58907c5afc53e3f68152508160000181905250604051806040016040528060405180604001604052807f0c39e5181036ed0f8c1c85d1ac112d0e4496f16e5ef1b4a46c235993ce15a11881526020017f0400930cd7fe891745b2eed967ffb21e6cde3ba58d033f815b2bdecafe6f8123815250815260200160405180604001604052807f1934c4ceb682ef04591740725080c7284e351b298984b506403ed7c8763dd68181526020017e23a617aa24a802d9baff09a92f62b54818eae95c80a75c9a65514a523a61498152508152508160200181905250604051806040016040528060405180604001604052807f139a7e966aa1d036ba5b1c5d98cdba1729b54cdc2352494b99e39e791e837d8081526020017f12a82d45be0c19fcd58b31a90f2fdcab984e001fb3f733add0c599c6dbfdc3f4815250815260200160405180604001604052807f126e0eace5ded6218fc98cf0fe657dfa09034668c7b026c89daa97493c3e14e481526020017f217d47974ae25c79e07edec132cf76e0156d614c44c64e2719b9f3a16f0731b68152508152508160400181905250604051806040016040528060405180604001604052807f08e7b84962f1c68c61cb701372c13932e2efb3389aabb8d994c4d62dc2df5f6f81526020017f159acf2928a2ceb129cd27893bdddfa4ec4a089b31dd07719b89577cf9188733815250815260200160405180604001604052807f1635cc96908cba7a1f9a82745b6c956e4d164e630e72fbf8d5143529c94ccc4f81526020017f2e61fea983fee1df0c246fc8afc2b6731e7984c3144c0ebabcb786cd10ff488c8152508152508160600181905250600360405190808252806020026020018201604052801561056457816020015b610551610cb8565b8152602001906001900390816105495790505b50816080018190525060405180604001604052807f1087e1865a7e551206a6ddde240c83f358bb536de344d72720ed746877f6531581526020017f01d6ff8816ca81dd91f8572b4c53725b0b847e93f72a9b9913814d994d3eaf1381525081608001516000815181106105d357fe5b602002602001018190525060405180604001604052807f01c18a646d88f565be85c3afe9a5831ba9f7e058b4cb664ab1fd6aa9983ce66081526020017f0efb8f484a3fd0a180d9e2c5ed1f6429cf1d37c6de68e524ed2946d545312bbd815250816080015160018151811061064457fe5b602002602001018190525060405180604001604052807f0139ae845161f3164aa13f52e073f39ebba1e3f059426808ef8a922b5c60576781526020017f2b847bf569d09e394f5338b62dd247d0ae0ccada5fa804619292c80a221365cc81525081608001516002815181106106b557fe5b602002602001018190525090565b6106cb610c9e565b6106d3610cd2565b8360000151816000600381106106e557fe5b60200201818152505083602001518160016003811061070057fe5b602002018181525050828160026003811061071757fe5b602002018181525050600060608360808460076107d05a03fa9050806000811461074057610742565bfe5b508061074d57600080fd5b505092915050565b61075d610c9e565b610765610cf4565b83600001518160006004811061077757fe5b60200201818152505083602001518160016004811061079257fe5b6020020181815250508260000151816002600481106107ad57fe5b6020020181815250508260200151816003600481106107c857fe5b602002018181525050600060608360c08460066107d05a03fa905080600081146107f1576107f3565bfe5b50806107fe57600080fd5b505092915050565b61080e610c9e565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4790506000836000015114801561084b575060008360200151145b1561086f57604051806040016040528060008152602001600081525091505061089b565b6040518060400160405280846000015181526020018285602001518161089157fe5b0683038152509150505b919050565b6000606060046040519080825280602002602001820160405280156108df57816020015b6108cc610cb8565b8152602001906001900390816108c45790505b5090506060600460405190808252806020026020018201604052801561091f57816020015b61090c610d16565b8152602001906001900390816109045790505b5090508a8260008151811061093057fe5b6020026020010181905250888260018151811061094957fe5b6020026020010181905250868260028151811061096257fe5b6020026020010181905250848260038151811061097b57fe5b6020026020010181905250898160008151811061099457fe5b602002602001018190525087816001815181106109ad57fe5b602002602001018190525085816002815181106109c657fe5b602002602001018190525083816003815181106109df57fe5b60200260200101819052506109f48282610a04565b9250505098975050505050505050565b60008151835114610a1457600080fd5b6000835190506000600682029050606081604051908082528060200260200182016040528015610a535781602001602082028038833980820191505090505b50905060008090505b83811015610bf957868181518110610a7057fe5b602002602001015160000151826000600684020181518110610a8e57fe5b602002602001018181525050868181518110610aa657fe5b602002602001015160200151826001600684020181518110610ac457fe5b602002602001018181525050858181518110610adc57fe5b602002602001015160000151600160028110610af457fe5b6020020151826002600684020181518110610b0b57fe5b602002602001018181525050858181518110610b2357fe5b602002602001015160000151600060028110610b3b57fe5b6020020151826003600684020181518110610b5257fe5b602002602001018181525050858181518110610b6a57fe5b602002602001015160200151600160028110610b8257fe5b6020020151826004600684020181518110610b9957fe5b602002602001018181525050858181518110610bb157fe5b602002602001015160200151600060028110610bc957fe5b6020020151826005600684020181518110610be057fe5b6020026020010181815250508080600101915050610a5c565b50610c02610d3c565b6000602082602086026020860160086107d05a03fa90508060008114610c2757610c29565bfe5b5080610c3457600080fd5b600082600060018110610c4357fe5b602002015114159550505050505092915050565b6040518060a00160405280610c6a610cb8565b8152602001610c77610d16565b8152602001610c84610d16565b8152602001610c91610d16565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b6040518060400160405280610d29610d5e565b8152602001610d36610d5e565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b6040518060400160405280600290602082028038833980820191505090505090565b600082601f830112610d9157600080fd5b6002610da4610d9f8261100b565b610fde565b91508183856020840282011115610dba57600080fd5b60005b83811015610dea5781610dd08882610f61565b845260208401935060208301925050600181019050610dbd565b5050505092915050565b600082601f830112610e0557600080fd5b6002610e18610e138261102d565b610fde565b91508183856020840282011115610e2e57600080fd5b60005b83811015610e5e5781610e448882610f61565b845260208401935060208301925050600181019050610e31565b5050505092915050565b600060408284031215610e7a57600080fd5b610e846040610fde565b90506000610e9484828501610f61565b6000830152506020610ea884828501610f61565b60208301525092915050565b600060808284031215610ec657600080fd5b610ed06040610fde565b90506000610ee084828501610d80565b6000830152506040610ef484828501610d80565b60208301525092915050565b60006101008284031215610f1357600080fd5b610f1d6060610fde565b90506000610f2d84828501610e68565b6000830152506040610f4184828501610eb4565b60208301525060c0610f5584828501610e68565b60408301525092915050565b600081359050610f7081611065565b92915050565b6000806101408385031215610f8a57600080fd5b6000610f9885828601610f00565b925050610100610faa85828601610df4565b9150509250929050565b610fbd8161104f565b82525050565b6000602082019050610fd86000830184610fb4565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561100157600080fd5b8060405250919050565b600067ffffffffffffffff82111561102257600080fd5b602082029050919050565b600067ffffffffffffffff82111561104457600080fd5b602082029050919050565b60008115159050919050565b6000819050919050565b61106e8161105b565b811461107957600080fd5b5056fea365627a7a72315820ee944fc35173046d2b0411c7b8b6bde10b5cd9b48bbaaaad26ed94d9acb746a76c6578706572696d656e74616cf564736f6c6343000510004068747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101735760003560e01c80634f6ccce7116100de578063b88d4fde11610097578063cc79253211610071578063cc7925321461046e578063d547cfb71461048a578063e985e9c5146104a8578063f2fde38b146104d857610173565b8063b88d4fde14610404578063c778d51e14610420578063c87b56dd1461043e57610173565b80634f6ccce71461031c5780636352211e1461034c57806370a082311461037c578063893d20e8146103ac57806395d89b41146103ca578063a22cb465146103e857610173565b806323b872dd1161013057806323b872dd1461024c57806327dc297e146102685780632f745c591461028457806338bbfa50146102b457806340c10f19146102d057806342842e0e1461030057610173565b806301ffc9a71461017857806306fdde03146101a8578063081812fc146101c6578063095ea7b3146101f657806316c38b3c1461021257806318160ddd1461022e575b600080fd5b610192600480360361018d9190810190612d36565b6104f4565b60405161019f919061345c565b60405180910390f35b6101b061055c565b6040516101bd9190613477565b60405180910390f35b6101e060048036036101db9190810190612d88565b6105fe565b6040516101ed91906133b1565b60405180910390f35b610210600480360361020b9190810190612b70565b61063b565b005b61022c60048036036102279190810190612c11565b6107f0565b005b610236610927565b604051610243919061366b565b60405180910390f35b61026660048036036102619190810190612a6a565b610934565b005b610282600480360361027d9190810190612c63565b610957565b005b61029e60048036036102999190810190612b70565b61099a565b6040516102ab919061366b565b60405180910390f35b6102ce60048036036102c99190810190612cb7565b610a0d565b005b6102ea60048036036102e59190810190612b70565b610a12565b6040516102f7919061345c565b60405180910390f35b61031a60048036036103159190810190612a6a565b610ac2565b005b61033660048036036103319190810190612d88565b610ae2565b604051610343919061366b565b60405180910390f35b61036660048036036103619190810190612d88565b610b16565b60405161037391906133b1565b60405180910390f35b61039660048036036103919190810190612a05565b610b53565b6040516103a3919061366b565b60405180910390f35b6103b4610ba3565b6040516103c191906133b1565b60405180910390f35b6103d2610bcc565b6040516103df9190613477565b60405180910390f35b61040260048036036103fd9190810190612b34565b610c6e565b005b61041e60048036036104199190810190612ab9565b610da4565b005b610428610dca565b604051610435919061366b565b60405180910390f35b61045860048036036104539190810190612d88565b610dd4565b6040516104659190613477565b60405180910390f35b61048860048036036104839190810190612bac565b610e9b565b005b610492611093565b60405161049f9190613477565b60405180910390f35b6104c260048036036104bd9190810190612a2e565b611135565b6040516104cf919061345c565b60405180910390f35b6104f260048036036104ed9190810190612a05565b6111c9565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105f45780601f106105c9576101008083540402835291602001916105f4565b820191906000526020600020905b8154815290600101906020018083116105d757829003601f168201915b5050505050905090565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff1661065b82610b16565b73ffffffffffffffffffffffffffffffffffffffff1614156106b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a990613539565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166106d1610ba3565b73ffffffffffffffffffffffffffffffffffffffff16148061070057506106ff6106f9610ba3565b33611135565b5b61073f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073690613559565b60405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b336000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610880576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087790613579565b60405180910390fd5b81600060146101000a81548160ff021916908315150217905550600060149054906101000a900460ff16156108eb577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336040516108de91906133cc565b60405180910390a1610923565b7fff2b959f2bcdb44c7ecb4b16dae055431019d7350607125cfc2b74a06632c90e3360405161091a91906133cc565b60405180910390a15b5050565b6000600880549050905090565b61093e338261136b565b61094757600080fd5b610952838383611400565b505050565b610996828260006040519080825280601f01601f1916602001820160405280156109905781602001600182028038833980820191505090505b50610a0d565b5050565b60006109a583610b53565b82106109b057600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106109fa57fe5b9060005260206000200154905092915050565b505050565b6000336000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610aa4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9b90613579565b60405180910390fd5b610aae8484611424565b610ab783611445565b600191505092915050565b610add83838360405180602001604052806000815250610da4565b505050565b6000610aec610927565b8210610af757600080fd5b60088281548110610b0457fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610b9c600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611563565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060108054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c645780601f10610c3957610100808354040283529160200191610c64565b820191906000526020600020905b815481529060010190602001808311610c4757829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ca757600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610d98919061345c565b60405180910390a35050565b610daf848484610934565b610dbb84848484611571565b610dc457600080fd5b50505050565b6000601754905090565b6060610ddf82611688565b610de857600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e8f5780601f10610e6457610100808354040283529160200191610e8f565b820191906000526020600020905b815481529060010190602001808311610e7257829003601f168201915b50505050509050919050565b600082600001518360200151846040015184604051602001610ec094939291906135f9565b6040516020818303038152906040528051906020012090506000601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd76fc85856040518363ffffffff1660e01b8152600401610f37929190613640565b60206040518083038186803b158015610f4f57600080fd5b505afa158015610f63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610f879190810190612c3a565b9050600073ffffffffffffffffffffffffffffffffffffffff166018600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461102e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611025906135d9565b60405180910390fd5b6001151581151514611075576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106c906134f9565b60405180910390fd5b6110808587846116fa565b61108a8686610a12565b50505050505050565b606060118054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561112b5780601f106111005761010080835404028352916020019161112b565b820191906000526020600020905b81548152906001019060200180831161110e57829003601f168201915b5050505050905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b336000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611259576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125090613579565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146112c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112be906134b9565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc725865e7cdcd866e230cd3a87b0f9178cebce0a4f3d2d2e026474a1e2ee4439818460405161135e929190613433565b60405180910390a1505050565b60008061137783610b16565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806113e657508373ffffffffffffffffffffffffffffffffffffffff166113ce846105fe565b73ffffffffffffffffffffffffffffffffffffffff16145b806113f757506113f68185611135565b5b91505092915050565b61140b838383611919565b6114158382611b48565b61141f8282611ce6565b505050565b61142e8282611dad565b6114388282611ce6565b61144181611f2d565b5050565b61144e81611688565b61148d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148490613599565b60405180910390fd5b61153960118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115265780601f106114fb57610100808354040283529160200191611526565b820191906000526020600020905b81548152906001019060200180831161150957829003601f168201915b505050505061153483611f79565b6120a6565b60126000838152602001908152602001600020908051906020019061155f9291906125e8565b5050565b600081600001549050919050565b60006115928473ffffffffffffffffffffffffffffffffffffffff166120ea565b61159f5760019050611680565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b81526004016115e094939291906133e7565b602060405180830381600087803b1580156115fa57600080fd5b505af115801561160e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116329190810190612d5f565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600073ffffffffffffffffffffffffffffffffffffffff166018600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461179f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611796906135d9565b60405180910390fd5b6117b5600160175461213590919063ffffffff16565b6017819055506117c3612668565b60405180604001604052808581526020018473ffffffffffffffffffffffffffffffffffffffff168152509050601681908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505080601860008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507feee56a272e033e551b01fd6651d600222e9bca4956e1b6adcca67c56c267bf4a848460405161190b929190613686565b60405180910390a150505050565b8273ffffffffffffffffffffffffffffffffffffffff1661193982610b16565b73ffffffffffffffffffffffffffffffffffffffff161461198f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161198690613519565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156119ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119f6906135b9565b60405180910390fd5b611a088161218a565b611a4f600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612248565b611a96600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061225e565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611ba06001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061228190919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114611c8d576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611c0d57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611c6557fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611cdf9190612698565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b60011515611dba82611688565b15151480611df55750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b611e34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e2b90613499565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611ecd600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612248565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415611fc1576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506120a1565b600082905060005b60008214611feb578080600101915050600a8281611fe357fe5b049150611fc9565b6060816040519080825280601f01601f1916602001820160405280156120205781602001600182028038833980820191505090505b50905060006001830390505b6000861461209957600a868161203e57fe5b0660300160f81b8282806001900393508151811061205857fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868161209157fe5b04955061202c565b819450505050505b919050565b60606120e283836040518060200160405280600081525060405180602001604052806000815250604051806020016040528060008152506122cb565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561212c57506000801b8214155b92505050919050565b600080828401905083811015612180576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612177906134d9565b60405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146122455760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6001816000016000828254019250508190555050565b6122766001826000015461228190919063ffffffff16565b816000018190555050565b60006122c383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061258d565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156123275781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b88518110156123ac5788818151811061235357fe5b602001015160f81c60f81b83838060010194508151811061237057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061233e565b600090505b875181101561241f578781815181106123c657fe5b602001015160f81c60f81b8383806001019450815181106123e357fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506123b1565b600090505b86518110156124925786818151811061243957fe5b602001015160f81c60f81b83838060010194508151811061245657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612424565b600090505b8551811015612505578581815181106124ac57fe5b602001015160f81c60f81b8383806001019450815181106124c957fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612497565b600090505b84518110156125785784818151811061251f57fe5b602001015160f81c60f81b83838060010194508151811061253c57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061250a565b82995050505050505050505095945050505050565b60008383111582906125d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125cc9190613477565b60405180910390fd5b5060008385039050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061262957805160ff1916838001178555612657565b82800160010185558215612657579182015b8281111561265657825182559160200191906001019061263b565b5b50905061266491906126c4565b5090565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b8154818355818111156126bf578183600052602060002091820191016126be91906126c4565b5b505050565b6126e691905b808211156126e25760008160009055506001016126ca565b5090565b90565b6000813590506126f881613911565b92915050565b600082601f83011261270f57600080fd5b600261272261271d826136dc565b6136af565b9150818385602084028201111561273857600080fd5b60005b83811015612768578161274e88826129f0565b84526020840193506020830192505060018101905061273b565b5050505092915050565b600082601f83011261278357600080fd5b6002612796612791826136fe565b6136af565b915081838560208402820111156127ac57600080fd5b60005b838110156127dc57816127c288826129f0565b8452602084019350602083019250506001810190506127af565b5050505092915050565b6000813590506127f581613928565b92915050565b60008151905061280a81613928565b92915050565b60008135905061281f8161393f565b92915050565b60008135905061283481613956565b92915050565b60008151905061284981613956565b92915050565b600082601f83011261286057600080fd5b813561287361286e82613720565b6136af565b9150808252602083016020830185838301111561288f57600080fd5b61289a8382846138be565b50505092915050565b600082601f8301126128b457600080fd5b81356128c76128c28261374c565b6136af565b915080825260208301602083018583830111156128e357600080fd5b6128ee8382846138be565b50505092915050565b60006040828403121561290957600080fd5b61291360406136af565b90506000612923848285016129f0565b6000830152506020612937848285016129f0565b60208301525092915050565b60006080828403121561295557600080fd5b61295f60406136af565b9050600061296f848285016126fe565b6000830152506040612983848285016126fe565b60208301525092915050565b600061010082840312156129a257600080fd5b6129ac60606136af565b905060006129bc848285016128f7565b60008301525060406129d084828501612943565b60208301525060c06129e4848285016128f7565b60408301525092915050565b6000813590506129ff8161396d565b92915050565b600060208284031215612a1757600080fd5b6000612a25848285016126e9565b91505092915050565b60008060408385031215612a4157600080fd5b6000612a4f858286016126e9565b9250506020612a60858286016126e9565b9150509250929050565b600080600060608486031215612a7f57600080fd5b6000612a8d868287016126e9565b9350506020612a9e868287016126e9565b9250506040612aaf868287016129f0565b9150509250925092565b60008060008060808587031215612acf57600080fd5b6000612add878288016126e9565b9450506020612aee878288016126e9565b9350506040612aff878288016129f0565b925050606085013567ffffffffffffffff811115612b1c57600080fd5b612b288782880161284f565b91505092959194509250565b60008060408385031215612b4757600080fd5b6000612b55858286016126e9565b9250506020612b66858286016127e6565b9150509250929050565b60008060408385031215612b8357600080fd5b6000612b91858286016126e9565b9250506020612ba2858286016129f0565b9150509250929050565b6000806000806101808587031215612bc357600080fd5b6000612bd1878288016126e9565b9450506020612be2878288016129f0565b9350506040612bf38782880161298f565b925050610140612c0587828801612772565b91505092959194509250565b600060208284031215612c2357600080fd5b6000612c31848285016127e6565b91505092915050565b600060208284031215612c4c57600080fd5b6000612c5a848285016127fb565b91505092915050565b60008060408385031215612c7657600080fd5b6000612c8485828601612810565b925050602083013567ffffffffffffffff811115612ca157600080fd5b612cad858286016128a3565b9150509250929050565b600080600060608486031215612ccc57600080fd5b6000612cda86828701612810565b935050602084013567ffffffffffffffff811115612cf757600080fd5b612d03868287016128a3565b925050604084013567ffffffffffffffff811115612d2057600080fd5b612d2c8682870161284f565b9150509250925092565b600060208284031215612d4857600080fd5b6000612d5684828501612825565b91505092915050565b600060208284031215612d7157600080fd5b6000612d7f8482850161283a565b91505092915050565b600060208284031215612d9a57600080fd5b6000612da8848285016129f0565b91505092915050565b6000612dbd8383613393565b60208301905092915050565b612dd281613888565b82525050565b612de18161380a565b82525050565b612df081613797565b612dfa81846137dd565b9250612e0582613782565b8060005b83811015612e36578151612e1d8782612db1565b9650612e28836137c5565b925050600181019050612e09565b505050505050565b612e478161378c565b612e5181846137d2565b9250612e5c82613778565b8060005b83811015612e8d578151612e748782612db1565b9650612e7f836137b8565b925050600181019050612e60565b505050505050565b612e9e8161381c565b82525050565b6000612eaf826137a2565b612eb981856137e8565b9350612ec98185602086016138cd565b612ed281613900565b840191505092915050565b6000612ee8826137ad565b612ef281856137f9565b9350612f028185602086016138cd565b612f0b81613900565b840191505092915050565b6000612f23602a836137f9565b91507f41646472657373206e6565647320746f2062652076616c696420616e6420746f60008301527f6b656e20756e69717565000000000000000000000000000000000000000000006020830152604082019050919050565b6000612f89600f836137f9565b91507f496e76616c6964206164647265737300000000000000000000000000000000006000830152602082019050919050565b6000612fc9601b836137f9565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b60006130096012836137f9565b91507f50726f6f66206973206e6f742076616c696400000000000000000000000000006000830152602082019050919050565b6000613049601f836137f9565b91507f546f6b656e206973206e6f74206f776e656420627920726571756573746572006000830152602082019050919050565b6000613089603b836137f9565b91507f476976656e20616464726573732073686f756c64206e6f74206265206571756160008301527f6c20746f20746865206f776e6572206f662074686520746f6b656e00000000006020830152604082019050919050565b60006130ef6045836137f9565b91507f546f206170726f7665206120746f6b656e207472616e736665722c20796f752060008301527f6e65656420746f20626520617070726f766564206279206f7220626520616e2060208301527f6f776e65720000000000000000000000000000000000000000000000000000006040830152606082019050919050565b600061317b6030836137f9565b91507f43616c6c696e672061646472657373206973206e6f7420746865204f776e657260008301527f206f662074686520636f6e7472616374000000000000000000000000000000006020830152604082019050919050565b60006131e16016836137f9565b91507f546f6b656e494420646f6573206e6f74206578697374000000000000000000006000830152602082019050919050565b60006132216015836137f9565b91507f546f206164647265737320697320696e76616c696400000000000000000000006000830152602082019050919050565b60006132616016836137f9565b91507f536f6c7574696f6e206973206e6f7420756e69717565000000000000000000006000830152602082019050919050565b6040820160008201516132aa6000850182613393565b5060208201516132bd6020850182613393565b50505050565b6040820160008201516132d96000850182613393565b5060208201516132ec6020850182613393565b50505050565b6080820160008201516133086000850182612e3e565b50602082015161331b6040850182612e3e565b50505050565b6080820160008201516133376000850182612e3e565b50602082015161334a6040850182612e3e565b50505050565b610100820160008201516133676000850182613294565b50602082015161337a60408501826132f2565b50604082015161338d60c0850182613294565b50505050565b61339c8161387e565b82525050565b6133ab8161387e565b82525050565b60006020820190506133c66000830184612dd8565b92915050565b60006020820190506133e16000830184612dc9565b92915050565b60006080820190506133fc6000830187612dc9565b6134096020830186612dd8565b61341660408301856133a2565b81810360608301526134288184612ea4565b905095945050505050565b60006040820190506134486000830185612dd8565b6134556020830184612dd8565b9392505050565b60006020820190506134716000830184612e95565b92915050565b600060208201905081810360008301526134918184612edd565b905092915050565b600060208201905081810360008301526134b281612f16565b9050919050565b600060208201905081810360008301526134d281612f7c565b9050919050565b600060208201905081810360008301526134f281612fbc565b9050919050565b6000602082019050818103600083015261351281612ffc565b9050919050565b600060208201905081810360008301526135328161303c565b9050919050565b600060208201905081810360008301526135528161307c565b9050919050565b60006020820190508181036000830152613572816130e2565b9050919050565b600060208201905081810360008301526135928161316e565b9050919050565b600060208201905081810360008301526135b2816131d4565b9050919050565b600060208201905081810360008301526135d281613214565b9050919050565b600060208201905081810360008301526135f281613254565b9050919050565b60006101408201905061360f60008301876132c3565b61361c6040830186613321565b61362960c08301856132c3565b613637610100830184612de7565b95945050505050565b6000610140820190506136566000830185613350565b613664610100830184612de7565b9392505050565b600060208201905061368060008301846133a2565b92915050565b600060408201905061369b60008301856133a2565b6136a86020830184612dd8565b9392505050565b6000604051905081810181811067ffffffffffffffff821117156136d257600080fd5b8060405250919050565b600067ffffffffffffffff8211156136f357600080fd5b602082029050919050565b600067ffffffffffffffff82111561371557600080fd5b602082029050919050565b600067ffffffffffffffff82111561373757600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561376357600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006138158261385e565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006138938261389a565b9050919050565b60006138a5826138ac565b9050919050565b60006138b78261385e565b9050919050565b82818337600083830152505050565b60005b838110156138eb5780820151818401526020810190506138d0565b838111156138fa576000848401525b50505050565b6000601f19601f8301169050919050565b61391a8161380a565b811461392557600080fd5b50565b6139318161381c565b811461393c57600080fd5b50565b61394881613828565b811461395357600080fd5b50565b61395f81613832565b811461396a57600080fd5b50565b6139768161387e565b811461398157600080fd5b5056fea365627a7a7231582056a42ad65f71191e402d5bc0c75cfe541860c576b3d11f98ec6cd6bfc42315206c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "125:1637:7:-;;;19322:96:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;526:1:7;493:34;;215:146;8:9:-1;5:2;;;30:1;27;20:12;5:2;215:146:7;;;;;;;;;;;;;;;;;;;;;;;;290:4;296:6;19609:4:4;19615:6;19623:13;18197:242;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;461:10;453:5;;:18;;;;;;;;;;;;;;;;;;486:46;517:1;521:10;486:46;;;;;;;;;;;;;;;;1652:5;1642:7;;:15;;;;;;;;;;;;;;;;;;2368:40;1965:10;2387:20;;2368:18;;;:40;;:::i;:::-;4514;4388:10;4533:20;;4514:18;;;:40;;:::i;:::-;11076:51;10682:10;11095:31;;11076:18;;;:51;;:::i;:::-;18305:4;18297:5;:12;;;;;;;;;;;;:::i;:::-;;18329:6;18319:7;:16;;;;;;;;;;;;:::i;:::-;;18361:12;18345:13;:28;;;;;;;;;;;;:::i;:::-;;18383:49;18008:10;18402:29;;18383:18;;;:49;;:::i;:::-;18197:242;;;19663:10;19655:5;;:18;;;;;;;;;;;;;;;;;;19540:140;;340:14:7;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;340:14:7;321:16;;:33;;;;;;;;;;;;;;;;;;215:146;;125:1637;;2718:158:4;2808:10;2793:25;;:11;:25;;;;;2785:34;;;;;;2865:4;2829:20;:33;2850:11;2829:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;2718:158;:::o;125:1637:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6:444:-1:-;;119:3;112:4;104:6;100:17;96:27;86:2;;137:1;134;127:12;86:2;167:6;161:13;189:65;204:49;246:6;204:49;;;189:65;;;180:74;;274:6;267:5;260:21;310:4;302:6;298:17;343:4;336:5;332:16;378:3;369:6;364:3;360:16;357:25;354:2;;;395:1;392;385:12;354:2;405:39;437:6;432:3;427;405:39;;;79:371;;;;;;;;458:597;;;610:2;598:9;589:7;585:23;581:32;578:2;;;626:1;623;616:12;578:2;682:1;671:9;667:17;661:24;705:18;697:6;694:30;691:2;;;737:1;734;727:12;691:2;757:74;823:7;814:6;803:9;799:22;757:74;;;747:84;;640:197;889:2;878:9;874:18;868:25;913:18;905:6;902:30;899:2;;;945:1;942;935:12;899:2;965:74;1031:7;1022:6;1011:9;1007:22;965:74;;;955:84;;847:198;572:483;;;;;;1062:142;1153:45;1192:5;1153:45;;;1148:3;1141:58;1135:69;;;1211:356;;1373:2;1362:9;1358:18;1350:26;;1387:79;1463:1;1452:9;1448:17;1439:6;1387:79;;;1477:80;1553:2;1542:9;1538:18;1529:6;1477:80;;;1344:223;;;;;;1574:256;;1636:2;1630:9;1620:19;;1674:4;1666:6;1662:17;1773:6;1761:10;1758:22;1737:18;1725:10;1722:34;1719:62;1716:2;;;1794:1;1791;1784:12;1716:2;1814:10;1810:2;1803:22;1614:216;;;;;1837:322;;1981:18;1973:6;1970:30;1967:2;;;2013:1;2010;2003:12;1967:2;2080:4;2076:9;2069:4;2061:6;2057:17;2053:33;2045:41;;2144:4;2138;2134:15;2126:23;;1904:255;;;;2166:121;;2239:42;2232:5;2228:54;2217:65;;2211:76;;;;2294:129;;2381:37;2412:5;2381:37;;;2368:50;;2362:61;;;;2430:121;;2509:37;2540:5;2509:37;;;2496:50;;2490:61;;;;2558:108;;2637:24;2655:5;2637:24;;;2624:37;;2618:48;;;;2674:268;2739:1;2746:101;2760:6;2757:1;2754:13;2746:101;;;2836:1;2831:3;2827:11;2821:18;2817:1;2812:3;2808:11;2801:39;2782:2;2779:1;2775:10;2770:15;;2746:101;;;2862:6;2859:1;2856:13;2853:2;;;2927:1;2918:6;2913:3;2909:16;2902:27;2853:2;2723:219;;;;;125:1637:7;;;;;;;",
  "deployedSourceMap": "125:1637:7:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;125:1637:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2506:133:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;18445:134;;;:::i;:::-;;;;;;;;;;;;;;;;5295:167;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4877:412;;;;;;;;;;;;;;;;:::i;:::-;;1670:222;;;;;;;;;;;;;;;;:::i;:::-;;11841:94;;;:::i;:::-;;;;;;;;;;;;;;;;6439:180;;;;;;;;;;;;;;;;:::i;:::-;;14801:122:6;;;;;;;;;;;;;;;;:::i;:::-;;11507:182:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14929:166:6;;;;;;;;;;;;;;;;:::i;:::-;;19686:230:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6625:132;;;;;;;;;;;;;;;;:::i;:::-;;12272:148;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4696:108;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4567:123;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;763:78;;;:::i;:::-;;;;;;;;;;;;;;;;18585:138;;;:::i;:::-;;;;;;;;;;;;;;;;5754:213;;;;;;;;;;;;;;;;:::i;:::-;;6763:211;;;;;;;;;;;;;;;;:::i;:::-;;1116:97:7;;;:::i;:::-;;;;;;;;;;;;;;;;18885:151:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1219:541:7;;;;;;;;;;;;;;;;:::i;:::-;;18729:150:4;;;:::i;:::-;;;;;;;;;;;;;;;;6288:145;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;937:269;;;;;;;;;;;;;;;;:::i;:::-;;2506:133;2576:4;2599:20;:33;2620:11;2599:33;;;;;;;;;;;;;;;;;;;;;;;;;;;2592:40;;2506:133;;;:::o;18445:134::-;18531:13;18567:5;18560:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18445:134;:::o;5295:167::-;5354:7;5431:15;:24;5447:7;5431:24;;;;;;;;;;;;;;;;;;;;;5424:31;;5295:167;;;:::o;4877:412::-;4968:2;4948:22;;:16;4956:7;4948;:16::i;:::-;:22;;;;4940:94;;;;;;;;;;;;;;;;;;;;;;5066:10;5052:24;;:10;:8;:10::i;:::-;:24;;;:68;;;;5080:40;5097:10;:8;:10::i;:::-;5109;5080:16;:40::i;:::-;5052:68;5044:150;;;;;;;;;;;;;;;;;;;;;;5232:2;5205:15;:24;5221:7;5205:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;5274:7;5270:2;5249:33;;5258:10;5249:33;;;;;;;;;;;;4877:412;;:::o;1670:222::-;1722:10;657:5;;;;;;;;;;;638:24;;:15;:24;;;630:85;;;;;;;;;;;;;;;;;;;;;;1754:4;1744:7;;:14;;;;;;;;;;;;;;;;;;1773:7;;;;;;;;;;;1769:117;;;1801:18;1808:10;1801:18;;;;;;;;;;;;;;;1769:117;;;1855:20;1864:10;1855:20;;;;;;;;;;;;;;;1769:117;1670:222;;:::o;11841:94::-;11885:7;11911:10;:17;;;;11904:24;;11841:94;:::o;6439:180::-;6529:39;6548:10;6560:7;6529:18;:39::i;:::-;6521:48;;;;;;6580:32;6594:4;6600:2;6604:7;6580:13;:32::i;:::-;6439:180;;;:::o;14801:122:6:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:6;;;;14876:10;:40::i;:::-;14801:122;;:::o;11507:182:4:-;11587:7;11622:16;11632:5;11622:9;:16::i;:::-;11614:5;:24;11606:33;;;;;;11656:12;:19;11669:5;11656:19;;;;;;;;;;;;;;;11676:5;11656:26;;;;;;;;;;;;;;;;11649:33;;11507:182;;;;:::o;14929:166:6:-;;;;:::o;19686:230:4:-;19808:4;19783:10;657:5;;;;;;;;;;;638:24;;:15;:24;;;630:85;;;;;;;;;;;;;;;;;;;;;;19828:24;19840:2;19844:7;19828:11;:24::i;:::-;19862:26;19880:7;19862:17;:26::i;:::-;19905:4;19898:11;;19686:230;;;;;:::o;6625:132::-;6711:39;6728:4;6734:2;6738:7;6711:39;;;;;;;;;;;;:16;:39::i;:::-;6625:132;;;:::o;12272:148::-;12330:7;12365:13;:11;:13::i;:::-;12357:5;:21;12349:30;;;;;;12396:10;12407:5;12396:17;;;;;;;;;;;;;;;;12389:24;;12272:148;;;:::o;4696:108::-;4751:7;4777:11;:20;4789:7;4777:20;;;;;;;;;;;;;;;;;;;;;4770:27;;4696:108;;;:::o;4567:123::-;4622:7;4649:34;:17;:24;4667:5;4649:24;;;;;;;;;;;;;;;:32;:34::i;:::-;4642:41;;4567:123;;;:::o;763:78::-;803:7;829:5;;;;;;;;;;;822:12;;763:78;:::o;18585:138::-;18673:13;18709:7;18702:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18585:138;:::o;5754:213::-;5839:10;5833:16;;:2;:16;;;;5825:25;;;;;;5897:8;5860:18;:30;5879:10;5860:30;;;;;;;;;;;;;;;:34;5891:2;5860:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;5947:2;5920:40;;5935:10;5920:40;;;5951:8;5920:40;;;;;;;;;;;;;;;5754:213;;:::o;6763:211::-;6869:31;6882:4;6888:2;6892:7;6869:12;:31::i;:::-;6918:48;6941:4;6947:2;6951:7;6960:5;6918:22;:48::i;:::-;6910:57;;;;;;6763:211;;;;:::o;1116:97:7:-;1166:7;1192:14;;1185:21;;1116:97;:::o;18885:151:4:-;18943:13;18976:16;18984:7;18976;:16::i;:::-;18968:25;;;;;;19010:10;:19;19021:7;19010:19;;;;;;;;;;;19003:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18885:151;;;:::o;1219:541:7:-;1378:11;1413:5;:7;;;1422:5;:7;;;1431:5;:7;;;1440:5;1402:44;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1402:44:7;;;1392:55;;;;;;1378:69;;1457:19;1479:16;;;;;;;;;;;:25;;;1505:5;1512;1479:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1479:39:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1479:39:7;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1479:39:7;;;;;;;;;1457:61;;1585:1;1537:50;;:15;:20;1553:3;1537:20;;;;;;;;;;;:36;;;;;;;;;;;;:50;;;1529:85;;;;;;;;;;;;;;;;;;;;;;1650:4;1632:22;;:14;:22;;;1624:53;;;;;;;;;;;;;;;;;;;;;;1688:32;1703:7;1712:2;1716:3;1688:14;:32::i;:::-;1730:23;1741:2;1745:7;1730:10;:23::i;:::-;;1219:541;;;;;;:::o;18729:150:4:-;18823:13;18859;18852:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18729:150;:::o;6288:145::-;6368:4;6391:18;:25;6410:5;6391:25;;;;;;;;;;;;;;;:35;6417:8;6391:35;;;;;;;;;;;;;;;;;;;;;;;;;6384:42;;6288:145;;;;:::o;937:269::-;1004:10;657:5;;;;;;;;;;;638:24;;:15;:24;;;630:85;;;;;;;;;;;;;;;;;;;;;;1054:8;1034:29;;:8;:29;;;1026:56;;;;;;;;;;;;;;;;;;;;;;1092:16;1111:5;;;;;;;;;;;1092:24;;1134:8;1126:5;;:16;;;;;;;;;;;;;;;;;;1157:42;1180:8;1190;1157:42;;;;;;;;;;;;;;;;725:1;937:269;;:::o;7680:246::-;7765:4;7781:13;7797:16;7805:7;7797;:16::i;:::-;7781:32;;7842:5;7831:16;;:7;:16;;;:51;;;;7875:7;7851:31;;:20;7863:7;7851:11;:20::i;:::-;:31;;;7831:51;:87;;;;7886:32;7903:5;7910:7;7886:16;:32::i;:::-;7831:87;7823:96;;;7680:246;;;;:::o;12795:239::-;12880:38;12900:4;12906:2;12910:7;12880:19;:38::i;:::-;12929:47;12962:4;12968:7;12929:32;:47::i;:::-;12987:40;13015:2;13019:7;12987:27;:40::i;:::-;12795:239;;;:::o;13289:196::-;13352:24;13364:2;13368:7;13352:11;:24::i;:::-;13387:40;13415:2;13419:7;13387:27;:40::i;:::-;13438;13470:7;13438:31;:40::i;:::-;13289:196;;:::o;19042:191::-;19107:16;19115:7;19107;:16::i;:::-;19099:51;;;;;;;;;;;;;;;;;;;;;;19183:43;19193:13;19183:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19208:17;19217:7;19208:8;:17::i;:::-;19183:9;:43::i;:::-;19161:10;:19;19172:7;19161:19;;;;;;;;;;;:65;;;;;;;;;;;;:::i;:::-;;19042:191;:::o;1065:112:0:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;9527:347:4:-;9648:4;9673:15;:2;:13;;;:15::i;:::-;9668:58;;9711:4;9704:11;;;;9668:58;9736:13;9768:2;9752:36;;;9789:10;9801:4;9807:7;9816:5;9752:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9752:70:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9752:70:4;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9752:70:4;;;;;;;;;9736:86;;3521:10;9850:16;;9840:26;;;:6;:26;;;;9832:35;;;9527:347;;;;;;;:::o;7168:152::-;7225:4;7241:13;7257:11;:20;7269:7;7257:20;;;;;;;;;;;;;;;;;;;;;7241:36;;7311:1;7294:19;;:5;:19;;;;7287:26;;;7168:152;;;:::o;660:450:7:-;812:1;764:50;;:15;:20;780:3;764:20;;;;;;;;;;;:36;;;;;;;;;;;;:50;;;756:85;;;;;;;;;;;;;;;;;;;;;;868:21;887:1;868:14;;:18;;:21;;;;:::i;:::-;851:14;:38;;;;899:28;;:::i;:::-;930:33;;;;;;;;940:5;930:33;;;;947:15;930:33;;;;;899:64;;973:14;993:11;973:32;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;973:32:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1038:11;1015:15;:20;1031:3;1015:20;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1065:38;1080:5;1087:15;1065:38;;;;;;;;;;;;;;;;660:450;;;;:::o;8578:421:4:-;8691:4;8671:24;;:16;8679:7;8671;:16::i;:::-;:24;;;8663:68;;;;;;;;;;;;;;;;;;;;;;8763:1;8749:16;;:2;:16;;;;8741:50;;;;;;;;;;;;;;;;;;;;;;8802:23;8817:7;8802:14;:23::i;:::-;8836:33;:17;:21;8854:2;8836:21;;;;;;;;;;;;;;;:31;:33::i;:::-;8879:35;:17;:23;8897:4;8879:23;;;;;;;;;;;;;;;:33;:35::i;:::-;8947:2;8924:11;:20;8936:7;8924:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;8984:7;8980:2;8965:27;;8974:4;8965:27;;;;;;;;;;;;8578:421;;;:::o;15261:1128::-;15523:22;15548:32;15578:1;15548:12;:18;15561:4;15548:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;15523:57;;15590:18;15611:17;:26;15629:7;15611:26;;;;;;;;;;;;15590:47;;15755:14;15741:10;:28;15737:323;;15785:19;15807:12;:18;15820:4;15807:18;;;;;;;;;;;;;;;15826:14;15807:34;;;;;;;;;;;;;;;;15785:56;;15889:11;15856:12;:18;15869:4;15856:18;;;;;;;;;;;;;;;15875:10;15856:30;;;;;;;;;;;;;;;:44;;;;16005:10;15972:17;:30;15990:11;15972:30;;;;;;;;;;;:43;;;;15737:323;;16146:12;:18;16159:4;16146:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;15261:1128;;;;:::o;14107:183::-;14220:12;:16;14233:2;14220:16;;;;;;;;;;;;;;;:23;;;;14191:17;:26;14209:7;14191:26;;;;;;;;;;;:52;;;;14253:12;:16;14266:2;14253:16;;;;;;;;;;;;;;;14275:7;14253:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;14253:30:4;;;;;;;;;;;;;;;;;;;;;;14107:183;;:::o;8083:296::-;8174:4;8154:24;;:16;8162:7;8154;:16::i;:::-;:24;;;:44;;;;8196:1;8182:16;;:2;:16;;;;8154:44;8146:99;;;;;;;;;;;;;;;;;;;;;;8278:2;8255:11;:20;8267:7;8255:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;8290:33;:17;:21;8308:2;8290:21;;;;;;;;;;;;;;;:31;:33::i;:::-;8364:7;8360:2;8339:33;;8356:1;8339:33;;;;;;;;;;;;8083:296;;:::o;14485:161::-;14588:10;:17;;;;14561:15;:24;14577:7;14561:24;;;;;;;;;;;:44;;;;14615:10;14631:7;14615:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;14615:24:4;;;;;;;;;;;;;;;;;;;;;;14485:161;:::o;43271:465:6:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;43456:66;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:6;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;43601:100;;43664:2;43659;:7;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;686:610:3:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;834:176:1:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;9955:171:4:-;10054:1;10018:38;;:15;:24;10034:7;10018:24;;;;;;;;;;;;;;;;;;;;;:38;;;10014:106;;10107:1;10072:15;:24;10088:7;10072:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;10014:106;9955:171;:::o;1183:178:0:-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1367:108::-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;40282:1020:6:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:6;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;1732:187:1:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;125:1637:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;161:608;;272:3;265:4;257:6;253:17;249:27;239:2;;290:1;287;280:12;239:2;314:4;333:74;348:58;399:6;348:58;;;333:74;;;324:83;;424:5;483:6;530:3;522:4;514:6;510:17;505:3;501:27;498:36;495:2;;;547:1;544;537:12;495:2;572:1;557:206;582:6;579:1;576:13;557:206;;;640:3;662:37;695:3;683:10;662:37;;;657:3;650:50;723:4;718:3;714:14;707:21;;751:4;746:3;742:14;735:21;;614:149;604:1;601;597:9;592:14;;557:206;;;561:14;232:537;;;;;;;;796:616;;911:3;904:4;896:6;892:17;888:27;878:2;;929:1;926;919:12;878:2;953:4;972:78;987:62;1042:6;987:62;;;972:78;;;963:87;;1067:5;1126:6;1173:3;1165:4;1157:6;1153:17;1148:3;1144:27;1141:36;1138:2;;;1190:1;1187;1180:12;1138:2;1215:1;1200:206;1225:6;1222:1;1219:13;1200:206;;;1283:3;1305:37;1338:3;1326:10;1305:37;;;1300:3;1293:50;1366:4;1361:3;1357:14;1350:21;;1394:4;1389:3;1385:14;1378:21;;1257:149;1247:1;1244;1240:9;1235:14;;1200:206;;;1204:14;871:541;;;;;;;;1420:124;;1497:6;1484:20;1475:29;;1509:30;1533:5;1509:30;;;1469:75;;;;;1551:128;;1632:6;1626:13;1617:22;;1644:30;1668:5;1644:30;;;1611:68;;;;;1686:130;;1766:6;1753:20;1744:29;;1778:33;1805:5;1778:33;;;1738:78;;;;;1823:128;;1902:6;1889:20;1880:29;;1914:32;1940:5;1914:32;;;1874:77;;;;;1958:132;;2041:6;2035:13;2026:22;;2053:32;2079:5;2053:32;;;2020:70;;;;;2098:440;;2199:3;2192:4;2184:6;2180:17;2176:27;2166:2;;2217:1;2214;2207:12;2166:2;2254:6;2241:20;2276:64;2291:48;2332:6;2291:48;;;2276:64;;;2267:73;;2360:6;2353:5;2346:21;2396:4;2388:6;2384:17;2429:4;2422:5;2418:16;2464:3;2455:6;2450:3;2446:16;2443:25;2440:2;;;2481:1;2478;2471:12;2440:2;2491:41;2525:6;2520:3;2515;2491:41;;;2159:379;;;;;;;;2547:442;;2649:3;2642:4;2634:6;2630:17;2626:27;2616:2;;2667:1;2664;2657:12;2616:2;2704:6;2691:20;2726:65;2741:49;2783:6;2741:49;;;2726:65;;;2717:74;;2811:6;2804:5;2797:21;2847:4;2839:6;2835:17;2880:4;2873:5;2869:16;2915:3;2906:6;2901:3;2897:16;2894:25;2891:2;;;2932:1;2929;2922:12;2891:2;2942:41;2976:6;2971:3;2966;2942:41;;;2609:380;;;;;;;;3026:457;;3136:4;3124:9;3119:3;3115:19;3111:30;3108:2;;;3154:1;3151;3144:12;3108:2;3172:20;3187:4;3172:20;;;3163:29;;3239:1;3271:49;3316:3;3307:6;3296:9;3292:22;3271:49;;;3264:4;3257:5;3253:16;3246:75;3202:130;3379:2;3412:49;3457:3;3448:6;3437:9;3433:22;3412:49;;;3405:4;3398:5;3394:16;3387:75;3342:131;3102:381;;;;;3519:495;;3629:4;3617:9;3612:3;3608:19;3604:30;3601:2;;;3647:1;3644;3637:12;3601:2;3665:20;3680:4;3665:20;;;3656:29;;3732:1;3764:68;3828:3;3819:6;3808:9;3804:22;3764:68;;;3757:4;3750:5;3746:16;3739:94;3695:149;3891:2;3924:68;3988:3;3979:6;3968:9;3964:22;3924:68;;;3917:4;3910:5;3906:16;3899:94;3854:150;3595:419;;;;;4049:666;;4161:6;4149:9;4144:3;4140:19;4136:32;4133:2;;;4181:1;4178;4171:12;4133:2;4199:20;4214:4;4199:20;;;4190:29;;4266:1;4298:70;4364:3;4355:6;4344:9;4340:22;4298:70;;;4291:4;4284:5;4280:16;4273:96;4229:151;4427:2;4460:70;4526:3;4517:6;4506:9;4502:22;4460:70;;;4453:4;4446:5;4442:16;4435:96;4390:152;4589:3;4623:70;4689:3;4680:6;4669:9;4665:22;4623:70;;;4616:4;4609:5;4605:16;4598:96;4552:153;4127:588;;;;;4722:130;;4802:6;4789:20;4780:29;;4814:33;4841:5;4814:33;;;4774:78;;;;;4859:241;;4963:2;4951:9;4942:7;4938:23;4934:32;4931:2;;;4979:1;4976;4969:12;4931:2;5014:1;5031:53;5076:7;5067:6;5056:9;5052:22;5031:53;;;5021:63;;4993:97;4925:175;;;;;5107:366;;;5228:2;5216:9;5207:7;5203:23;5199:32;5196:2;;;5244:1;5241;5234:12;5196:2;5279:1;5296:53;5341:7;5332:6;5321:9;5317:22;5296:53;;;5286:63;;5258:97;5386:2;5404:53;5449:7;5440:6;5429:9;5425:22;5404:53;;;5394:63;;5365:98;5190:283;;;;;;5480:491;;;;5618:2;5606:9;5597:7;5593:23;5589:32;5586:2;;;5634:1;5631;5624:12;5586:2;5669:1;5686:53;5731:7;5722:6;5711:9;5707:22;5686:53;;;5676:63;;5648:97;5776:2;5794:53;5839:7;5830:6;5819:9;5815:22;5794:53;;;5784:63;;5755:98;5884:2;5902:53;5947:7;5938:6;5927:9;5923:22;5902:53;;;5892:63;;5863:98;5580:391;;;;;;5978:721;;;;;6142:3;6130:9;6121:7;6117:23;6113:33;6110:2;;;6159:1;6156;6149:12;6110:2;6194:1;6211:53;6256:7;6247:6;6236:9;6232:22;6211:53;;;6201:63;;6173:97;6301:2;6319:53;6364:7;6355:6;6344:9;6340:22;6319:53;;;6309:63;;6280:98;6409:2;6427:53;6472:7;6463:6;6452:9;6448:22;6427:53;;;6417:63;;6388:98;6545:2;6534:9;6530:18;6517:32;6569:18;6561:6;6558:30;6555:2;;;6601:1;6598;6591:12;6555:2;6621:62;6675:7;6666:6;6655:9;6651:22;6621:62;;;6611:72;;6496:193;6104:595;;;;;;;;6706:360;;;6824:2;6812:9;6803:7;6799:23;6795:32;6792:2;;;6840:1;6837;6830:12;6792:2;6875:1;6892:53;6937:7;6928:6;6917:9;6913:22;6892:53;;;6882:63;;6854:97;6982:2;7000:50;7042:7;7033:6;7022:9;7018:22;7000:50;;;6990:60;;6961:95;6786:280;;;;;;7073:366;;;7194:2;7182:9;7173:7;7169:23;7165:32;7162:2;;;7210:1;7207;7200:12;7162:2;7245:1;7262:53;7307:7;7298:6;7287:9;7283:22;7262:53;;;7252:63;;7224:97;7352:2;7370:53;7415:7;7406:6;7395:9;7391:22;7370:53;;;7360:63;;7331:98;7156:283;;;;;;7446:710;;;;;7647:3;7635:9;7626:7;7622:23;7618:33;7615:2;;;7664:1;7661;7654:12;7615:2;7699:1;7716:53;7761:7;7752:6;7741:9;7737:22;7716:53;;;7706:63;;7678:97;7806:2;7824:53;7869:7;7860:6;7849:9;7845:22;7824:53;;;7814:63;;7785:98;7914:2;7932:76;8000:7;7991:6;7980:9;7976:22;7932:76;;;7922:86;;7893:121;8045:3;8064:76;8132:7;8123:6;8112:9;8108:22;8064:76;;;8054:86;;8024:122;7609:547;;;;;;;;8163:235;;8264:2;8252:9;8243:7;8239:23;8235:32;8232:2;;;8280:1;8277;8270:12;8232:2;8315:1;8332:50;8374:7;8365:6;8354:9;8350:22;8332:50;;;8322:60;;8294:94;8226:172;;;;;8405:257;;8517:2;8505:9;8496:7;8492:23;8488:32;8485:2;;;8533:1;8530;8523:12;8485:2;8568:1;8585:61;8638:7;8629:6;8618:9;8614:22;8585:61;;;8575:71;;8547:105;8479:183;;;;;8669:472;;;8800:2;8788:9;8779:7;8775:23;8771:32;8768:2;;;8816:1;8813;8806:12;8768:2;8851:1;8868:53;8913:7;8904:6;8893:9;8889:22;8868:53;;;8858:63;;8830:97;8986:2;8975:9;8971:18;8958:32;9010:18;9002:6;8999:30;8996:2;;;9042:1;9039;9032:12;8996:2;9062:63;9117:7;9108:6;9097:9;9093:22;9062:63;;;9052:73;;8937:194;8762:379;;;;;;9148:701;;;;9305:2;9293:9;9284:7;9280:23;9276:32;9273:2;;;9321:1;9318;9311:12;9273:2;9356:1;9373:53;9418:7;9409:6;9398:9;9394:22;9373:53;;;9363:63;;9335:97;9491:2;9480:9;9476:18;9463:32;9515:18;9507:6;9504:30;9501:2;;;9547:1;9544;9537:12;9501:2;9567:63;9622:7;9613:6;9602:9;9598:22;9567:63;;;9557:73;;9442:194;9695:2;9684:9;9680:18;9667:32;9719:18;9711:6;9708:30;9705:2;;;9751:1;9748;9741:12;9705:2;9771:62;9825:7;9816:6;9805:9;9801:22;9771:62;;;9761:72;;9646:193;9267:582;;;;;;9856:239;;9959:2;9947:9;9938:7;9934:23;9930:32;9927:2;;;9975:1;9972;9965:12;9927:2;10010:1;10027:52;10071:7;10062:6;10051:9;10047:22;10027:52;;;10017:62;;9989:96;9921:174;;;;;10102:261;;10216:2;10204:9;10195:7;10191:23;10187:32;10184:2;;;10232:1;10229;10222:12;10184:2;10267:1;10284:63;10339:7;10330:6;10319:9;10315:22;10284:63;;;10274:73;;10246:107;10178:185;;;;;10370:241;;10474:2;10462:9;10453:7;10449:23;10445:32;10442:2;;;10490:1;10487;10480:12;10442:2;10525:1;10542:53;10587:7;10578:6;10567:9;10563:22;10542:53;;;10532:63;;10504:97;10436:175;;;;;10619:173;;10706:46;10748:3;10740:6;10706:46;;;10781:4;10776:3;10772:14;10758:28;;10699:93;;;;;10800:142;10891:45;10930:5;10891:45;;;10886:3;10879:58;10873:69;;;10949:113;11032:24;11050:5;11032:24;;;11027:3;11020:37;11014:48;;;11102:660;11235:52;11281:5;11235:52;;;11300:84;11377:6;11372:3;11300:84;;;11293:91;;11405:54;11453:5;11405:54;;;11479:7;11507:1;11492:258;11517:6;11514:1;11511:13;11492:258;;;11584:6;11578:13;11605:63;11664:3;11649:13;11605:63;;;11598:70;;11685:58;11736:6;11685:58;;;11675:68;;11549:201;11539:1;11536;11532:9;11527:14;;11492:258;;;11496:14;11214:548;;;;;;11803:624;11922:48;11964:5;11922:48;;;11983:74;12050:6;12045:3;11983:74;;;11976:81;;12078:50;12122:5;12078:50;;;12148:7;12176:1;12161:254;12186:6;12183:1;12180:13;12161:254;;;12253:6;12247:13;12274:63;12333:3;12318:13;12274:63;;;12267:70;;12354:54;12401:6;12354:54;;;12344:64;;12218:197;12208:1;12205;12201:9;12196:14;;12161:254;;;12165:14;11901:526;;;;;;12435:104;12512:21;12527:5;12512:21;;;12507:3;12500:34;12494:45;;;12546:343;;12656:38;12688:5;12656:38;;;12706:70;12769:6;12764:3;12706:70;;;12699:77;;12781:52;12826:6;12821:3;12814:4;12807:5;12803:16;12781:52;;;12854:29;12876:6;12854:29;;;12849:3;12845:39;12838:46;;12636:253;;;;;;12896:347;;13008:39;13041:5;13008:39;;;13059:71;13123:6;13118:3;13059:71;;;13052:78;;13135:52;13180:6;13175:3;13168:4;13161:5;13157:16;13135:52;;;13208:29;13230:6;13208:29;;;13203:3;13199:39;13192:46;;12988:255;;;;;;13251:379;;13411:67;13475:2;13470:3;13411:67;;;13404:74;;13511:34;13507:1;13502:3;13498:11;13491:55;13580:12;13575:2;13570:3;13566:12;13559:34;13621:2;13616:3;13612:12;13605:19;;13397:233;;;;13639:315;;13799:67;13863:2;13858:3;13799:67;;;13792:74;;13899:17;13895:1;13890:3;13886:11;13879:38;13945:2;13940:3;13936:12;13929:19;;13785:169;;;;13963:327;;14123:67;14187:2;14182:3;14123:67;;;14116:74;;14223:29;14219:1;14214:3;14210:11;14203:50;14281:2;14276:3;14272:12;14265:19;;14109:181;;;;14299:318;;14459:67;14523:2;14518:3;14459:67;;;14452:74;;14559:20;14555:1;14550:3;14546:11;14539:41;14608:2;14603:3;14599:12;14592:19;;14445:172;;;;14626:331;;14786:67;14850:2;14845:3;14786:67;;;14779:74;;14886:33;14882:1;14877:3;14873:11;14866:54;14948:2;14943:3;14939:12;14932:19;;14772:185;;;;14966:396;;15126:67;15190:2;15185:3;15126:67;;;15119:74;;15226:34;15222:1;15217:3;15213:11;15206:55;15295:29;15290:2;15285:3;15281:12;15274:51;15353:2;15348:3;15344:12;15337:19;;15112:250;;;;15371:443;;15531:67;15595:2;15590:3;15531:67;;;15524:74;;15631:34;15627:1;15622:3;15618:11;15611:55;15700:34;15695:2;15690:3;15686:12;15679:56;15769:7;15764:2;15759:3;15755:12;15748:29;15805:2;15800:3;15796:12;15789:19;;15517:297;;;;15823:385;;15983:67;16047:2;16042:3;15983:67;;;15976:74;;16083:34;16079:1;16074:3;16070:11;16063:55;16152:18;16147:2;16142:3;16138:12;16131:40;16199:2;16194:3;16190:12;16183:19;;15969:239;;;;16217:322;;16377:67;16441:2;16436:3;16377:67;;;16370:74;;16477:24;16473:1;16468:3;16464:11;16457:45;16530:2;16525:3;16521:12;16514:19;;16363:176;;;;16548:321;;16708:67;16772:2;16767:3;16708:67;;;16701:74;;16808:23;16804:1;16799:3;16795:11;16788:44;16860:2;16855:3;16851:12;16844:19;;16694:175;;;;16878:322;;17038:67;17102:2;17097:3;17038:67;;;17031:74;;17138:24;17134:1;17129:3;17125:11;17118:45;17191:2;17186:3;17182:12;17175:19;;17024:176;;;;17263:456;17392:4;17387:3;17383:14;17472:4;17465:5;17461:16;17455:23;17484:63;17541:4;17536:3;17532:14;17518:12;17484:63;;;17412:141;17623:4;17616:5;17612:16;17606:23;17635:63;17692:4;17687:3;17683:14;17669:12;17635:63;;;17563:141;17365:354;;;;17781:466;17920:4;17915:3;17911:14;18000:4;17993:5;17989:16;17983:23;18012:63;18069:4;18064:3;18060:14;18046:12;18012:63;;;17940:141;18151:4;18144:5;18140:16;18134:23;18163:63;18220:4;18215:3;18211:14;18197:12;18163:63;;;18091:141;17893:354;;;;18309:540;18438:4;18433:3;18429:14;18518:4;18511:5;18507:16;18501:23;18530:105;18629:4;18624:3;18620:14;18606:12;18530:105;;;18458:183;18711:4;18704:5;18700:16;18694:23;18723:105;18822:4;18817:3;18813:14;18799:12;18723:105;;;18651:183;18411:438;;;;18911:550;19050:4;19045:3;19041:14;19130:4;19123:5;19119:16;19113:23;19142:105;19241:4;19236:3;19232:14;19218:12;19142:105;;;19070:183;19323:4;19316:5;19312:16;19306:23;19335:105;19434:4;19429:3;19425:14;19411:12;19335:105;;;19263:183;19023:438;;;;19521:757;19660:6;19655:3;19651:16;19742:4;19735:5;19731:16;19725:23;19754:109;19857:4;19852:3;19848:14;19834:12;19754:109;;;19682:187;19939:4;19932:5;19928:16;19922:23;19951:109;20054:4;20049:3;20045:14;20031:12;19951:109;;;19879:187;20136:4;20129:5;20125:16;20119:23;20148:109;20251:4;20246:3;20242:14;20228:12;20148:109;;;20076:187;19633:645;;;;20285:103;20358:24;20376:5;20358:24;;;20353:3;20346:37;20340:48;;;20395:113;20478:24;20496:5;20478:24;;;20473:3;20466:37;20460:48;;;20515:213;;20633:2;20622:9;20618:18;20610:26;;20647:71;20715:1;20704:9;20700:17;20691:6;20647:71;;;20604:124;;;;;20735:229;;20861:2;20850:9;20846:18;20838:26;;20875:79;20951:1;20940:9;20936:17;20927:6;20875:79;;;20832:132;;;;;20971:647;;21199:3;21188:9;21184:19;21176:27;;21214:79;21290:1;21279:9;21275:17;21266:6;21214:79;;;21304:72;21372:2;21361:9;21357:18;21348:6;21304:72;;;21387;21455:2;21444:9;21440:18;21431:6;21387:72;;;21507:9;21501:4;21497:20;21492:2;21481:9;21477:18;21470:48;21532:76;21603:4;21594:6;21532:76;;;21524:84;;21170:448;;;;;;;;21625:324;;21771:2;21760:9;21756:18;21748:26;;21785:71;21853:1;21842:9;21838:17;21829:6;21785:71;;;21867:72;21935:2;21924:9;21920:18;21911:6;21867:72;;;21742:207;;;;;;21956:201;;22068:2;22057:9;22053:18;22045:26;;22082:65;22144:1;22133:9;22129:17;22120:6;22082:65;;;22039:118;;;;;22164:301;;22302:2;22291:9;22287:18;22279:26;;22352:9;22346:4;22342:20;22338:1;22327:9;22323:17;22316:47;22377:78;22450:4;22441:6;22377:78;;;22369:86;;22273:192;;;;;22472:407;;22663:2;22652:9;22648:18;22640:26;;22713:9;22707:4;22703:20;22699:1;22688:9;22684:17;22677:47;22738:131;22864:4;22738:131;;;22730:139;;22634:245;;;;22886:407;;23077:2;23066:9;23062:18;23054:26;;23127:9;23121:4;23117:20;23113:1;23102:9;23098:17;23091:47;23152:131;23278:4;23152:131;;;23144:139;;23048:245;;;;23300:407;;23491:2;23480:9;23476:18;23468:26;;23541:9;23535:4;23531:20;23527:1;23516:9;23512:17;23505:47;23566:131;23692:4;23566:131;;;23558:139;;23462:245;;;;23714:407;;23905:2;23894:9;23890:18;23882:26;;23955:9;23949:4;23945:20;23941:1;23930:9;23926:17;23919:47;23980:131;24106:4;23980:131;;;23972:139;;23876:245;;;;24128:407;;24319:2;24308:9;24304:18;24296:26;;24369:9;24363:4;24359:20;24355:1;24344:9;24340:17;24333:47;24394:131;24520:4;24394:131;;;24386:139;;24290:245;;;;24542:407;;24733:2;24722:9;24718:18;24710:26;;24783:9;24777:4;24773:20;24769:1;24758:9;24754:17;24747:47;24808:131;24934:4;24808:131;;;24800:139;;24704:245;;;;24956:407;;25147:2;25136:9;25132:18;25124:26;;25197:9;25191:4;25187:20;25183:1;25172:9;25168:17;25161:47;25222:131;25348:4;25222:131;;;25214:139;;25118:245;;;;25370:407;;25561:2;25550:9;25546:18;25538:26;;25611:9;25605:4;25601:20;25597:1;25586:9;25582:17;25575:47;25636:131;25762:4;25636:131;;;25628:139;;25532:245;;;;25784:407;;25975:2;25964:9;25960:18;25952:26;;26025:9;26019:4;26015:20;26011:1;26000:9;25996:17;25989:47;26050:131;26176:4;26050:131;;;26042:139;;25946:245;;;;26198:407;;26389:2;26378:9;26374:18;26366:26;;26439:9;26433:4;26429:20;26425:1;26414:9;26410:17;26403:47;26464:131;26590:4;26464:131;;;26456:139;;26360:245;;;;26612:407;;26803:2;26792:9;26788:18;26780:26;;26853:9;26847:4;26843:20;26839:1;26828:9;26824:17;26817:47;26878:131;27004:4;26878:131;;;26870:139;;26774:245;;;;27026:917;;27412:3;27401:9;27397:19;27389:27;;27427:117;27541:1;27530:9;27526:17;27517:6;27427:117;;;27555:118;27669:2;27658:9;27654:18;27645:6;27555:118;;;27684:119;27798:3;27787:9;27783:19;27774:6;27684:119;;;27814;27928:3;27917:9;27913:19;27904:6;27814:119;;;27383:560;;;;;;;;27950:510;;28188:3;28177:9;28173:19;28165:27;;28203:117;28317:1;28306:9;28302:17;28293:6;28203:117;;;28331:119;28445:3;28434:9;28430:19;28421:6;28331:119;;;28159:301;;;;;;28467:213;;28585:2;28574:9;28570:18;28562:26;;28599:71;28667:1;28656:9;28652:17;28643:6;28599:71;;;28556:124;;;;;28687:324;;28833:2;28822:9;28818:18;28810:26;;28847:71;28915:1;28904:9;28900:17;28891:6;28847:71;;;28929:72;28997:2;28986:9;28982:18;28973:6;28929:72;;;28804:207;;;;;;29018:256;;29080:2;29074:9;29064:19;;29118:4;29110:6;29106:17;29217:6;29205:10;29202:22;29181:18;29169:10;29166:34;29163:62;29160:2;;;29238:1;29235;29228:12;29160:2;29258:10;29254:2;29247:22;29058:216;;;;;29281:240;;29434:18;29426:6;29423:30;29420:2;;;29466:1;29463;29456:12;29420:2;29501:4;29493:6;29489:17;29481:25;;29357:164;;;;29528:244;;29685:18;29677:6;29674:30;29671:2;;;29717:1;29714;29707:12;29671:2;29752:4;29744:6;29740:17;29732:25;;29608:164;;;;29779:321;;29922:18;29914:6;29911:30;29908:2;;;29954:1;29951;29944:12;29908:2;30021:4;30017:9;30010:4;30002:6;29998:17;29994:33;29986:41;;30085:4;30079;30075:15;30067:23;;29845:255;;;;30107:322;;30251:18;30243:6;30240:30;30237:2;;;30283:1;30280;30273:12;30237:2;30350:4;30346:9;30339:4;30331:6;30327:17;30323:33;30315:41;;30414:4;30408;30404:15;30396:23;;30174:255;;;;30436:93;;30516:3;30508:11;;30502:27;;;;30536:97;;30620:3;30612:11;;30606:27;;;;30640:104;;30730:4;30720:14;;30708:36;;;;30751:108;;30845:4;30835:14;;30823:36;;;;30866:121;;30959:5;30953:12;30943:22;;30924:63;;;;30994:122;;31088:5;31082:12;31072:22;;31053:63;;;;31123:102;;31215:4;31210:3;31206:14;31198:22;;31192:33;;;;31232:106;;31328:4;31323:3;31319:14;31311:22;;31305:33;;;;31346:130;;31467:3;31452:18;;31445:31;;;;;31485:140;;31616:3;31601:18;;31594:31;;;;;31634:162;;31748:6;31743:3;31736:19;31785:4;31780:3;31776:14;31761:29;;31729:67;;;;;31805:163;;31920:6;31915:3;31908:19;31957:4;31952:3;31948:14;31933:29;;31901:67;;;;;31976:91;;32038:24;32056:5;32038:24;;;32027:35;;32021:46;;;;32074:85;;32147:5;32140:13;32133:21;32122:32;;32116:43;;;;32166:72;;32228:5;32217:16;;32211:27;;;;32245:144;;32317:66;32310:5;32306:78;32295:89;;32289:100;;;;32396:121;;32469:42;32462:5;32458:54;32447:65;;32441:76;;;;32524:72;;32586:5;32575:16;;32569:27;;;;32603:129;;32690:37;32721:5;32690:37;;;32677:50;;32671:61;;;;32739:121;;32818:37;32849:5;32818:37;;;32805:50;;32799:61;;;;32867:108;;32946:24;32964:5;32946:24;;;32933:37;;32927:48;;;;32983:145;33064:6;33059:3;33054;33041:30;33120:1;33111:6;33106:3;33102:16;33095:27;33034:94;;;;33137:268;33202:1;33209:101;33223:6;33220:1;33217:13;33209:101;;;33299:1;33294:3;33290:11;33284:18;33280:1;33275:3;33271:11;33264:39;33245:2;33242:1;33238:10;33233:15;;33209:101;;;33325:6;33322:1;33319:13;33316:2;;;33390:1;33381:6;33376:3;33372:16;33365:27;33316:2;33186:219;;;;;33413:97;;33501:2;33497:7;33492:2;33485:5;33481:14;33477:28;33467:38;;33461:49;;;;33518:117;33587:24;33605:5;33587:24;;;33580:5;33577:35;33567:2;;33626:1;33623;33616:12;33567:2;33561:74;;33642:111;33708:21;33723:5;33708:21;;;33701:5;33698:32;33688:2;;33744:1;33741;33734:12;33688:2;33682:71;;33760:117;33829:24;33847:5;33829:24;;;33822:5;33819:35;33809:2;;33868:1;33865;33858:12;33809:2;33803:74;;33884:115;33952:23;33969:5;33952:23;;;33945:5;33942:34;33932:2;;33990:1;33987;33980:12;33932:2;33926:73;;34006:117;34075:24;34093:5;34075:24;;;34068:5;34065:35;34055:2;;34114:1;34111;34104:12;34055:2;34049:74;",
  "source": "pragma experimental ABIEncoderV2;\npragma solidity >=0.4.21 <0.6.0;\n\nimport './Verifier.sol';\nimport './ERC721Mintable.sol';\n\ncontract SolnSquareVerifier is CustomERC721Mintable {\n    Verifier verifierContract;\n\n    constructor(string memory name, string memory symbol) CustomERC721Mintable(name, symbol) public {\n        verifierContract = new Verifier();\n    }\n\n    struct Solutions {\n        uint256 index;\n        address verifierAddress;\n    }\n\n    Solutions[] private solutionsArray;\n    uint256 private solutionsCount = 0;\n    mapping(bytes32 => Solutions) private uniqueSolutions;\n\n    event CreateSolution(uint256 index, address verifierAddress);\n\n    function createSolution(uint256 index, address verifierAddress, bytes32 key) internal {\n        require(uniqueSolutions[key].verifierAddress == address(0), 'Solution is not unique');\n        solutionsCount = solutionsCount.add(1);\n        Solutions memory newSolution = Solutions(index, verifierAddress);\n        solutionsArray.push(newSolution);\n        uniqueSolutions[key] = newSolution;\n\n        emit CreateSolution(index, verifierAddress);\n    }\n\n    function getSolutionsNumber() public view returns(uint256) {\n        return solutionsCount;\n    }\n\n    function mintVerifySol(\n        address to,\n        uint256 tokenId,\n        Verifier.Proof memory proof, \n        uint[2] memory input\n    ) public {\n        bytes32 key = keccak256(abi.encode(proof.a, proof.b, proof.c, input));\n        bool solutionResult = verifierContract.verifyTx(proof, input);\n\n        require(uniqueSolutions[key].verifierAddress == address(0), 'Solution is not unique');\n        require(solutionResult == true, \"Proof is not valid\");\n\n        createSolution(tokenId, to, key);\n        super.mint(to, tokenId);\n    }\n}\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "sourcePath": "/Users/sergiunistorcosmin/Desktop/decentralizedNeighborhood/Blockchain-Capstone/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7979
      ]
    },
    "id": 7980,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7802,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:7"
      },
      {
        "id": 7803,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:32:7"
      },
      {
        "absolutePath": "project:/contracts/Verifier.sol",
        "file": "./Verifier.sol",
        "id": 7804,
        "nodeType": "ImportDirective",
        "scope": 7980,
        "sourceUnit": 8902,
        "src": "68:24:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7805,
        "nodeType": "ImportDirective",
        "scope": 7980,
        "sourceUnit": 1476,
        "src": "93:30:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7806,
              "name": "CustomERC721Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1475,
              "src": "156:20:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomERC721Mintable_$1475",
                "typeString": "contract CustomERC721Mintable"
              }
            },
            "id": 7807,
            "nodeType": "InheritanceSpecifier",
            "src": "156:20:7"
          }
        ],
        "contractDependencies": [
          412,
          483,
          529,
          1012,
          1310,
          1420,
          1475,
          7800,
          8901
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7979,
        "linearizedBaseContracts": [
          7979,
          1475,
          1420,
          7800,
          1310,
          1012,
          529,
          483,
          412
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7809,
            "name": "verifierContract",
            "nodeType": "VariableDeclaration",
            "scope": 7979,
            "src": "183:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Verifier_$8901",
              "typeString": "contract Verifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7808,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8901,
              "src": "183:8:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$8901",
                "typeString": "contract Verifier"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7826,
              "nodeType": "Block",
              "src": "311:50:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7820,
                      "name": "verifierContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7809,
                      "src": "321:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$8901",
                        "typeString": "contract Verifier"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 7822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "340:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Verifier_$8901_$",
                          "typeString": "function () returns (contract Verifier)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 7821,
                          "name": "Verifier",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 8901,
                          "src": "344:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Verifier_$8901",
                            "typeString": "contract Verifier"
                          }
                        }
                      },
                      "id": 7823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "340:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$8901",
                        "typeString": "contract Verifier"
                      }
                    },
                    "src": "321:33:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Verifier_$8901",
                      "typeString": "contract Verifier"
                    }
                  },
                  "id": 7825,
                  "nodeType": "ExpressionStatement",
                  "src": "321:33:7"
                }
              ]
            },
            "documentation": null,
            "id": 7827,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 7816,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7811,
                    "src": "290:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7817,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7813,
                    "src": "296:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 7818,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7815,
                  "name": "CustomERC721Mintable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1475,
                  "src": "269:20:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CustomERC721Mintable_$1475_$",
                    "typeString": "type(contract CustomERC721Mintable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "269:34:7"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7811,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 7827,
                  "src": "227:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7810,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "227:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7813,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 7827,
                  "src": "247:20:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7812,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "247:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "226:42:7"
            },
            "returnParameters": {
              "id": 7819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "311:0:7"
            },
            "scope": 7979,
            "src": "215:146:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SolnSquareVerifier.Solutions",
            "id": 7832,
            "members": [
              {
                "constant": false,
                "id": 7829,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7832,
                "src": "394:13:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7828,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "394:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7831,
                "name": "verifierAddress",
                "nodeType": "VariableDeclaration",
                "scope": 7832,
                "src": "417:23:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7830,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "417:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solutions",
            "nodeType": "StructDefinition",
            "scope": 7979,
            "src": "367:80:7",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7835,
            "name": "solutionsArray",
            "nodeType": "VariableDeclaration",
            "scope": 7979,
            "src": "453:34:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Solutions_$7832_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.Solutions[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7833,
                "name": "Solutions",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7832,
                "src": "453:9:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solutions_$7832_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solutions"
                }
              },
              "id": 7834,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "453:11:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Solutions_$7832_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.Solutions[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7838,
            "name": "solutionsCount",
            "nodeType": "VariableDeclaration",
            "scope": 7979,
            "src": "493:34:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7836,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "493:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 7837,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "526:1:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7842,
            "name": "uniqueSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7979,
            "src": "533:53:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solutions_$7832_storage_$",
              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solutions)"
            },
            "typeName": {
              "id": 7841,
              "keyType": {
                "id": 7839,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "541:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "533:29:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solutions_$7832_storage_$",
                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solutions)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7840,
                "name": "Solutions",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7832,
                "src": "552:9:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solutions_$7832_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solutions"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7848,
            "name": "CreateSolution",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7844,
                  "indexed": false,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7848,
                  "src": "614:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7843,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "614:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7846,
                  "indexed": false,
                  "name": "verifierAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7848,
                  "src": "629:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7845,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "629:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "613:40:7"
            },
            "src": "593:61:7"
          },
          {
            "body": {
              "id": 7900,
              "nodeType": "Block",
              "src": "746:364:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7858,
                              "name": "uniqueSolutions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7842,
                              "src": "764:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solutions_$7832_storage_$",
                                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solutions storage ref)"
                              }
                            },
                            "id": 7860,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7859,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7854,
                              "src": "780:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "764:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solutions_$7832_storage",
                              "typeString": "struct SolnSquareVerifier.Solutions storage ref"
                            }
                          },
                          "id": 7861,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verifierAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7831,
                          "src": "764:36:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 7863,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "812:1:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "804:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 7864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "804:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "764:50:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e206973206e6f7420756e69717565",
                        "id": 7866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "816:24:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f862245219e1b7d17340e15d76bf71ae45b4eb718df2620d5c3ed2687c882460",
                          "typeString": "literal_string \"Solution is not unique\""
                        },
                        "value": "Solution is not unique"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f862245219e1b7d17340e15d76bf71ae45b4eb718df2620d5c3ed2687c882460",
                          "typeString": "literal_string \"Solution is not unique\""
                        }
                      ],
                      "id": 7857,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8919,
                        8920
                      ],
                      "referencedDeclaration": 8920,
                      "src": "756:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "756:85:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7868,
                  "nodeType": "ExpressionStatement",
                  "src": "756:85:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7869,
                      "name": "solutionsCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7838,
                      "src": "851:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 7872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "887:1:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 7870,
                          "name": "solutionsCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7838,
                          "src": "868:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 75,
                        "src": "868:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "868:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "851:38:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7875,
                  "nodeType": "ExpressionStatement",
                  "src": "851:38:7"
                },
                {
                  "assignments": [
                    7877
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7877,
                      "name": "newSolution",
                      "nodeType": "VariableDeclaration",
                      "scope": 7900,
                      "src": "899:28:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solutions_$7832_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solutions"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7876,
                        "name": "Solutions",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7832,
                        "src": "899:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solutions_$7832_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solutions"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7882,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7879,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7850,
                        "src": "940:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7880,
                        "name": "verifierAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7852,
                        "src": "947:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7878,
                      "name": "Solutions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7832,
                      "src": "930:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Solutions_$7832_storage_ptr_$",
                        "typeString": "type(struct SolnSquareVerifier.Solutions storage pointer)"
                      }
                    },
                    "id": 7881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "930:33:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solutions_$7832_memory",
                      "typeString": "struct SolnSquareVerifier.Solutions memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "899:64:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7886,
                        "name": "newSolution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7877,
                        "src": "993:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solutions_$7832_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solutions memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Solutions_$7832_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solutions memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7883,
                        "name": "solutionsArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7835,
                        "src": "973:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solutions_$7832_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solutions storage ref[] storage ref"
                        }
                      },
                      "id": 7885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "973:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Solutions_$7832_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.Solutions storage ref) returns (uint256)"
                      }
                    },
                    "id": 7887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "973:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7888,
                  "nodeType": "ExpressionStatement",
                  "src": "973:32:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7889,
                        "name": "uniqueSolutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7842,
                        "src": "1015:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solutions_$7832_storage_$",
                          "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solutions storage ref)"
                        }
                      },
                      "id": 7891,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7890,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7854,
                        "src": "1031:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1015:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solutions_$7832_storage",
                        "typeString": "struct SolnSquareVerifier.Solutions storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7892,
                      "name": "newSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7877,
                      "src": "1038:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solutions_$7832_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solutions memory"
                      }
                    },
                    "src": "1015:34:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solutions_$7832_storage",
                      "typeString": "struct SolnSquareVerifier.Solutions storage ref"
                    }
                  },
                  "id": 7894,
                  "nodeType": "ExpressionStatement",
                  "src": "1015:34:7"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7896,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7850,
                        "src": "1080:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7897,
                        "name": "verifierAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7852,
                        "src": "1087:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7895,
                      "name": "CreateSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7848,
                      "src": "1065:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1065:38:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7899,
                  "nodeType": "EmitStatement",
                  "src": "1060:43:7"
                }
              ]
            },
            "documentation": null,
            "id": 7901,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7850,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7901,
                  "src": "684:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7849,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "684:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7852,
                  "name": "verifierAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7901,
                  "src": "699:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7851,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "699:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7854,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 7901,
                  "src": "724:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7853,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "724:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "683:53:7"
            },
            "returnParameters": {
              "id": 7856,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "746:0:7"
            },
            "scope": 7979,
            "src": "660:450:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7908,
              "nodeType": "Block",
              "src": "1175:38:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7906,
                    "name": "solutionsCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7838,
                    "src": "1192:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7905,
                  "id": 7907,
                  "nodeType": "Return",
                  "src": "1185:21:7"
                }
              ]
            },
            "documentation": null,
            "id": 7909,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSolutionsNumber",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7902,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1143:2:7"
            },
            "returnParameters": {
              "id": 7905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7904,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7909,
                  "src": "1166:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7903,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1166:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1165:9:7"
            },
            "scope": 7979,
            "src": "1116:97:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7977,
              "nodeType": "Block",
              "src": "1368:392:7",
              "statements": [
                {
                  "assignments": [
                    7923
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7923,
                      "name": "key",
                      "nodeType": "VariableDeclaration",
                      "scope": 7977,
                      "src": "1378:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7922,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1378:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7936,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7927,
                              "name": "proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7915,
                              "src": "1413:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proof_$8575_memory_ptr",
                                "typeString": "struct Verifier.Proof memory"
                              }
                            },
                            "id": 7928,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "a",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8570,
                            "src": "1413:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_G1Point_$7987_memory",
                              "typeString": "struct Pairing.G1Point memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7929,
                              "name": "proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7915,
                              "src": "1422:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proof_$8575_memory_ptr",
                                "typeString": "struct Verifier.Proof memory"
                              }
                            },
                            "id": 7930,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "b",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8572,
                            "src": "1422:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_G2Point_$7996_memory",
                              "typeString": "struct Pairing.G2Point memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7931,
                              "name": "proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7915,
                              "src": "1431:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proof_$8575_memory_ptr",
                                "typeString": "struct Verifier.Proof memory"
                              }
                            },
                            "id": 7932,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "c",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8574,
                            "src": "1431:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_G1Point_$7987_memory",
                              "typeString": "struct Pairing.G1Point memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7933,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7919,
                            "src": "1440:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_G1Point_$7987_memory",
                              "typeString": "struct Pairing.G1Point memory"
                            },
                            {
                              "typeIdentifier": "t_struct$_G2Point_$7996_memory",
                              "typeString": "struct Pairing.G2Point memory"
                            },
                            {
                              "typeIdentifier": "t_struct$_G1Point_$7987_memory",
                              "typeString": "struct Pairing.G1Point memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7925,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8903,
                            "src": "1402:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1402:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1402:44:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7924,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8910,
                      "src": "1392:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1392:55:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1378:69:7"
                },
                {
                  "assignments": [
                    7938
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7938,
                      "name": "solutionResult",
                      "nodeType": "VariableDeclaration",
                      "scope": 7977,
                      "src": "1457:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 7937,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1457:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7944,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7941,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7915,
                        "src": "1505:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proof_$8575_memory_ptr",
                          "typeString": "struct Verifier.Proof memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7942,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7919,
                        "src": "1512:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Proof_$8575_memory_ptr",
                          "typeString": "struct Verifier.Proof memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7939,
                        "name": "verifierContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7809,
                        "src": "1479:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Verifier_$8901",
                          "typeString": "contract Verifier"
                        }
                      },
                      "id": 7940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verifyTx",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8900,
                      "src": "1479:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_struct$_Proof_$8575_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (struct Verifier.Proof memory,uint256[2] memory) view external returns (bool)"
                      }
                    },
                    "id": 7943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1479:39:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1457:61:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7946,
                              "name": "uniqueSolutions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7842,
                              "src": "1537:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solutions_$7832_storage_$",
                                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solutions storage ref)"
                              }
                            },
                            "id": 7948,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7947,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7923,
                              "src": "1553:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1537:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solutions_$7832_storage",
                              "typeString": "struct SolnSquareVerifier.Solutions storage ref"
                            }
                          },
                          "id": 7949,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verifierAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7831,
                          "src": "1537:36:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 7951,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1585:1:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7950,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1577:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 7952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1577:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1537:50:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e206973206e6f7420756e69717565",
                        "id": 7954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1589:24:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f862245219e1b7d17340e15d76bf71ae45b4eb718df2620d5c3ed2687c882460",
                          "typeString": "literal_string \"Solution is not unique\""
                        },
                        "value": "Solution is not unique"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f862245219e1b7d17340e15d76bf71ae45b4eb718df2620d5c3ed2687c882460",
                          "typeString": "literal_string \"Solution is not unique\""
                        }
                      ],
                      "id": 7945,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8919,
                        8920
                      ],
                      "referencedDeclaration": 8920,
                      "src": "1529:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1529:85:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7956,
                  "nodeType": "ExpressionStatement",
                  "src": "1529:85:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7958,
                          "name": "solutionResult",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7938,
                          "src": "1632:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 7959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1650:4:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1632:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f6f66206973206e6f742076616c6964",
                        "id": 7961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1656:20:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_627311e9f23e710f0159ab908e296b4ddc838b15666578fbf8ab092285383469",
                          "typeString": "literal_string \"Proof is not valid\""
                        },
                        "value": "Proof is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_627311e9f23e710f0159ab908e296b4ddc838b15666578fbf8ab092285383469",
                          "typeString": "literal_string \"Proof is not valid\""
                        }
                      ],
                      "id": 7957,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8919,
                        8920
                      ],
                      "referencedDeclaration": 8920,
                      "src": "1624:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1624:53:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7963,
                  "nodeType": "ExpressionStatement",
                  "src": "1624:53:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7965,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7913,
                        "src": "1703:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7966,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7911,
                        "src": "1712:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7967,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7923,
                        "src": "1716:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 7964,
                      "name": "createSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7901,
                      "src": "1688:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,address,bytes32)"
                      }
                    },
                    "id": 7968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1688:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7969,
                  "nodeType": "ExpressionStatement",
                  "src": "1688:32:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7973,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7911,
                        "src": "1741:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7974,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7913,
                        "src": "1745:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7970,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8971,
                        "src": "1730:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SolnSquareVerifier_$7979",
                          "typeString": "contract super SolnSquareVerifier"
                        }
                      },
                      "id": 7972,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1474,
                      "src": "1730:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 7975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1730:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7976,
                  "nodeType": "ExpressionStatement",
                  "src": "1730:23:7"
                }
              ]
            },
            "documentation": null,
            "id": 7978,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintVerifySol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7911,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7978,
                  "src": "1251:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7910,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1251:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7913,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7978,
                  "src": "1271:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1271:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7915,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 7978,
                  "src": "1296:27:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$8575_memory_ptr",
                    "typeString": "struct Verifier.Proof"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7914,
                    "name": "Verifier.Proof",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8575,
                    "src": "1296:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$8575_storage_ptr",
                      "typeString": "struct Verifier.Proof"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7919,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7978,
                  "src": "1334:20:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7916,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1334:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7918,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1339:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1334:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1241:119:7"
            },
            "returnParameters": {
              "id": 7921,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1368:0:7"
            },
            "scope": 7979,
            "src": "1219:541:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7980,
        "src": "125:1637:7"
      }
    ],
    "src": "0:1793:7"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
      "exportedSymbols": {
        "SolnSquareVerifier": [
          7979
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 7802,
        "name": "PragmaDirective",
        "src": "0:33:7"
      },
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 7803,
        "name": "PragmaDirective",
        "src": "34:32:7"
      },
      {
        "attributes": {
          "SourceUnit": 8902,
          "absolutePath": "project:/contracts/Verifier.sol",
          "file": "./Verifier.sol",
          "scope": 7980,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7804,
        "name": "ImportDirective",
        "src": "68:24:7"
      },
      {
        "attributes": {
          "SourceUnit": 1476,
          "absolutePath": "project:/contracts/ERC721Mintable.sol",
          "file": "./ERC721Mintable.sol",
          "scope": 7980,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7805,
        "name": "ImportDirective",
        "src": "93:30:7"
      },
      {
        "attributes": {
          "contractDependencies": [
            412,
            483,
            529,
            1012,
            1310,
            1420,
            1475,
            7800,
            8901
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7979,
            1475,
            1420,
            7800,
            1310,
            1012,
            529,
            483,
            412
          ],
          "name": "SolnSquareVerifier",
          "scope": 7980
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "CustomERC721Mintable",
                  "referencedDeclaration": 1475,
                  "type": "contract CustomERC721Mintable"
                },
                "id": 7806,
                "name": "UserDefinedTypeName",
                "src": "156:20:7"
              }
            ],
            "id": 7807,
            "name": "InheritanceSpecifier",
            "src": "156:20:7"
          },
          {
            "attributes": {
              "constant": false,
              "name": "verifierContract",
              "scope": 7979,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract Verifier",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Verifier",
                  "referencedDeclaration": 8901,
                  "type": "contract Verifier"
                },
                "id": 7808,
                "name": "UserDefinedTypeName",
                "src": "183:8:7"
              }
            ],
            "id": 7809,
            "name": "VariableDeclaration",
            "src": "183:25:7"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 7979,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "name",
                      "scope": 7827,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 7810,
                        "name": "ElementaryTypeName",
                        "src": "227:6:7"
                      }
                    ],
                    "id": 7811,
                    "name": "VariableDeclaration",
                    "src": "227:18:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "symbol",
                      "scope": 7827,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 7812,
                        "name": "ElementaryTypeName",
                        "src": "247:6:7"
                      }
                    ],
                    "id": 7813,
                    "name": "VariableDeclaration",
                    "src": "247:20:7"
                  }
                ],
                "id": 7814,
                "name": "ParameterList",
                "src": "226:42:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7819,
                "name": "ParameterList",
                "src": "311:0:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1475,
                      "type": "type(contract CustomERC721Mintable)",
                      "value": "CustomERC721Mintable"
                    },
                    "id": 7815,
                    "name": "Identifier",
                    "src": "269:20:7"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7811,
                      "type": "string memory",
                      "value": "name"
                    },
                    "id": 7816,
                    "name": "Identifier",
                    "src": "290:4:7"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7813,
                      "type": "string memory",
                      "value": "symbol"
                    },
                    "id": 7817,
                    "name": "Identifier",
                    "src": "296:6:7"
                  }
                ],
                "id": 7818,
                "name": "ModifierInvocation",
                "src": "269:34:7"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract Verifier"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7809,
                              "type": "contract Verifier",
                              "value": "verifierContract"
                            },
                            "id": 7820,
                            "name": "Identifier",
                            "src": "321:16:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "contract Verifier",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "function () returns (contract Verifier)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "contractScope": null,
                                      "name": "Verifier",
                                      "referencedDeclaration": 8901,
                                      "type": "contract Verifier"
                                    },
                                    "id": 7821,
                                    "name": "UserDefinedTypeName",
                                    "src": "344:8:7"
                                  }
                                ],
                                "id": 7822,
                                "name": "NewExpression",
                                "src": "340:12:7"
                              }
                            ],
                            "id": 7823,
                            "name": "FunctionCall",
                            "src": "340:14:7"
                          }
                        ],
                        "id": 7824,
                        "name": "Assignment",
                        "src": "321:33:7"
                      }
                    ],
                    "id": 7825,
                    "name": "ExpressionStatement",
                    "src": "321:33:7"
                  }
                ],
                "id": 7826,
                "name": "Block",
                "src": "311:50:7"
              }
            ],
            "id": 7827,
            "name": "FunctionDefinition",
            "src": "215:146:7"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.Solutions",
              "name": "Solutions",
              "scope": 7979,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "index",
                  "scope": 7832,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 7828,
                    "name": "ElementaryTypeName",
                    "src": "394:7:7"
                  }
                ],
                "id": 7829,
                "name": "VariableDeclaration",
                "src": "394:13:7"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "verifierAddress",
                  "scope": 7832,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 7830,
                    "name": "ElementaryTypeName",
                    "src": "417:7:7"
                  }
                ],
                "id": 7831,
                "name": "VariableDeclaration",
                "src": "417:23:7"
              }
            ],
            "id": 7832,
            "name": "StructDefinition",
            "src": "367:80:7"
          },
          {
            "attributes": {
              "constant": false,
              "name": "solutionsArray",
              "scope": 7979,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct SolnSquareVerifier.Solutions[]",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "struct SolnSquareVerifier.Solutions[]"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solutions",
                      "referencedDeclaration": 7832,
                      "type": "struct SolnSquareVerifier.Solutions"
                    },
                    "id": 7833,
                    "name": "UserDefinedTypeName",
                    "src": "453:9:7"
                  }
                ],
                "id": 7834,
                "name": "ArrayTypeName",
                "src": "453:11:7"
              }
            ],
            "id": 7835,
            "name": "VariableDeclaration",
            "src": "453:34:7"
          },
          {
            "attributes": {
              "constant": false,
              "name": "solutionsCount",
              "scope": 7979,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 7836,
                "name": "ElementaryTypeName",
                "src": "493:7:7"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "30",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 0",
                  "value": "0"
                },
                "id": 7837,
                "name": "Literal",
                "src": "526:1:7"
              }
            ],
            "id": 7838,
            "name": "VariableDeclaration",
            "src": "493:34:7"
          },
          {
            "attributes": {
              "constant": false,
              "name": "uniqueSolutions",
              "scope": 7979,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(bytes32 => struct SolnSquareVerifier.Solutions)",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(bytes32 => struct SolnSquareVerifier.Solutions)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 7839,
                    "name": "ElementaryTypeName",
                    "src": "541:7:7"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solutions",
                      "referencedDeclaration": 7832,
                      "type": "struct SolnSquareVerifier.Solutions"
                    },
                    "id": 7840,
                    "name": "UserDefinedTypeName",
                    "src": "552:9:7"
                  }
                ],
                "id": 7841,
                "name": "Mapping",
                "src": "533:29:7"
              }
            ],
            "id": 7842,
            "name": "VariableDeclaration",
            "src": "533:53:7"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "CreateSolution"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "index",
                      "scope": 7848,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7843,
                        "name": "ElementaryTypeName",
                        "src": "614:7:7"
                      }
                    ],
                    "id": 7844,
                    "name": "VariableDeclaration",
                    "src": "614:13:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "verifierAddress",
                      "scope": 7848,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7845,
                        "name": "ElementaryTypeName",
                        "src": "629:7:7"
                      }
                    ],
                    "id": 7846,
                    "name": "VariableDeclaration",
                    "src": "629:23:7"
                  }
                ],
                "id": 7847,
                "name": "ParameterList",
                "src": "613:40:7"
              }
            ],
            "id": 7848,
            "name": "EventDefinition",
            "src": "593:61:7"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "createSolution",
              "scope": 7979,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "index",
                      "scope": 7901,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7849,
                        "name": "ElementaryTypeName",
                        "src": "684:7:7"
                      }
                    ],
                    "id": 7850,
                    "name": "VariableDeclaration",
                    "src": "684:13:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "verifierAddress",
                      "scope": 7901,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7851,
                        "name": "ElementaryTypeName",
                        "src": "699:7:7"
                      }
                    ],
                    "id": 7852,
                    "name": "VariableDeclaration",
                    "src": "699:23:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "key",
                      "scope": 7901,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 7853,
                        "name": "ElementaryTypeName",
                        "src": "724:7:7"
                      }
                    ],
                    "id": 7854,
                    "name": "VariableDeclaration",
                    "src": "724:11:7"
                  }
                ],
                "id": 7855,
                "name": "ParameterList",
                "src": "683:53:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7856,
                "name": "ParameterList",
                "src": "746:0:7"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_f862245219e1b7d17340e15d76bf71ae45b4eb718df2620d5c3ed2687c882460",
                                  "typeString": "literal_string \"Solution is not unique\""
                                }
                              ],
                              "overloadedDeclarations": [
                                8919,
                                8920
                              ],
                              "referencedDeclaration": 8920,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7857,
                            "name": "Identifier",
                            "src": "756:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "verifierAddress",
                                  "referencedDeclaration": 7831,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SolnSquareVerifier.Solutions storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7842,
                                          "type": "mapping(bytes32 => struct SolnSquareVerifier.Solutions storage ref)",
                                          "value": "uniqueSolutions"
                                        },
                                        "id": 7858,
                                        "name": "Identifier",
                                        "src": "764:15:7"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7854,
                                          "type": "bytes32",
                                          "value": "key"
                                        },
                                        "id": 7859,
                                        "name": "Identifier",
                                        "src": "780:3:7"
                                      }
                                    ],
                                    "id": 7860,
                                    "name": "IndexAccess",
                                    "src": "764:20:7"
                                  }
                                ],
                                "id": 7861,
                                "name": "MemberAccess",
                                "src": "764:36:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)",
                                      "value": "address"
                                    },
                                    "id": 7862,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "804:7:7"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 7863,
                                    "name": "Literal",
                                    "src": "812:1:7"
                                  }
                                ],
                                "id": 7864,
                                "name": "FunctionCall",
                                "src": "804:10:7"
                              }
                            ],
                            "id": 7865,
                            "name": "BinaryOperation",
                            "src": "764:50:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "536f6c7574696f6e206973206e6f7420756e69717565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Solution is not unique\"",
                              "value": "Solution is not unique"
                            },
                            "id": 7866,
                            "name": "Literal",
                            "src": "816:24:7"
                          }
                        ],
                        "id": 7867,
                        "name": "FunctionCall",
                        "src": "756:85:7"
                      }
                    ],
                    "id": 7868,
                    "name": "ExpressionStatement",
                    "src": "756:85:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7838,
                              "type": "uint256",
                              "value": "solutionsCount"
                            },
                            "id": 7869,
                            "name": "Identifier",
                            "src": "851:14:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "add",
                                  "referencedDeclaration": 75,
                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7838,
                                      "type": "uint256",
                                      "value": "solutionsCount"
                                    },
                                    "id": 7870,
                                    "name": "Identifier",
                                    "src": "868:14:7"
                                  }
                                ],
                                "id": 7871,
                                "name": "MemberAccess",
                                "src": "868:18:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 7872,
                                "name": "Literal",
                                "src": "887:1:7"
                              }
                            ],
                            "id": 7873,
                            "name": "FunctionCall",
                            "src": "868:21:7"
                          }
                        ],
                        "id": 7874,
                        "name": "Assignment",
                        "src": "851:38:7"
                      }
                    ],
                    "id": 7875,
                    "name": "ExpressionStatement",
                    "src": "851:38:7"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        7877
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "newSolution",
                          "scope": 7900,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct SolnSquareVerifier.Solutions",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Solutions",
                              "referencedDeclaration": 7832,
                              "type": "struct SolnSquareVerifier.Solutions"
                            },
                            "id": 7876,
                            "name": "UserDefinedTypeName",
                            "src": "899:9:7"
                          }
                        ],
                        "id": 7877,
                        "name": "VariableDeclaration",
                        "src": "899:28:7"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "struct SolnSquareVerifier.Solutions memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7832,
                              "type": "type(struct SolnSquareVerifier.Solutions storage pointer)",
                              "value": "Solutions"
                            },
                            "id": 7878,
                            "name": "Identifier",
                            "src": "930:9:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7850,
                              "type": "uint256",
                              "value": "index"
                            },
                            "id": 7879,
                            "name": "Identifier",
                            "src": "940:5:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7852,
                              "type": "address",
                              "value": "verifierAddress"
                            },
                            "id": 7880,
                            "name": "Identifier",
                            "src": "947:15:7"
                          }
                        ],
                        "id": 7881,
                        "name": "FunctionCall",
                        "src": "930:33:7"
                      }
                    ],
                    "id": 7882,
                    "name": "VariableDeclarationStatement",
                    "src": "899:64:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Solutions_$7832_memory_ptr",
                                  "typeString": "struct SolnSquareVerifier.Solutions memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (struct SolnSquareVerifier.Solutions storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7835,
                                  "type": "struct SolnSquareVerifier.Solutions storage ref[] storage ref",
                                  "value": "solutionsArray"
                                },
                                "id": 7883,
                                "name": "Identifier",
                                "src": "973:14:7"
                              }
                            ],
                            "id": 7885,
                            "name": "MemberAccess",
                            "src": "973:19:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7877,
                              "type": "struct SolnSquareVerifier.Solutions memory",
                              "value": "newSolution"
                            },
                            "id": 7886,
                            "name": "Identifier",
                            "src": "993:11:7"
                          }
                        ],
                        "id": 7887,
                        "name": "FunctionCall",
                        "src": "973:32:7"
                      }
                    ],
                    "id": 7888,
                    "name": "ExpressionStatement",
                    "src": "973:32:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct SolnSquareVerifier.Solutions storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct SolnSquareVerifier.Solutions storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7842,
                                  "type": "mapping(bytes32 => struct SolnSquareVerifier.Solutions storage ref)",
                                  "value": "uniqueSolutions"
                                },
                                "id": 7889,
                                "name": "Identifier",
                                "src": "1015:15:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7854,
                                  "type": "bytes32",
                                  "value": "key"
                                },
                                "id": 7890,
                                "name": "Identifier",
                                "src": "1031:3:7"
                              }
                            ],
                            "id": 7891,
                            "name": "IndexAccess",
                            "src": "1015:20:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7877,
                              "type": "struct SolnSquareVerifier.Solutions memory",
                              "value": "newSolution"
                            },
                            "id": 7892,
                            "name": "Identifier",
                            "src": "1038:11:7"
                          }
                        ],
                        "id": 7893,
                        "name": "Assignment",
                        "src": "1015:34:7"
                      }
                    ],
                    "id": 7894,
                    "name": "ExpressionStatement",
                    "src": "1015:34:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7848,
                              "type": "function (uint256,address)",
                              "value": "CreateSolution"
                            },
                            "id": 7895,
                            "name": "Identifier",
                            "src": "1065:14:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7850,
                              "type": "uint256",
                              "value": "index"
                            },
                            "id": 7896,
                            "name": "Identifier",
                            "src": "1080:5:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7852,
                              "type": "address",
                              "value": "verifierAddress"
                            },
                            "id": 7897,
                            "name": "Identifier",
                            "src": "1087:15:7"
                          }
                        ],
                        "id": 7898,
                        "name": "FunctionCall",
                        "src": "1065:38:7"
                      }
                    ],
                    "id": 7899,
                    "name": "EmitStatement",
                    "src": "1060:43:7"
                  }
                ],
                "id": 7900,
                "name": "Block",
                "src": "746:364:7"
              }
            ],
            "id": 7901,
            "name": "FunctionDefinition",
            "src": "660:450:7"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getSolutionsNumber",
              "scope": 7979,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7902,
                "name": "ParameterList",
                "src": "1143:2:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 7909,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7903,
                        "name": "ElementaryTypeName",
                        "src": "1166:7:7"
                      }
                    ],
                    "id": 7904,
                    "name": "VariableDeclaration",
                    "src": "1166:7:7"
                  }
                ],
                "id": 7905,
                "name": "ParameterList",
                "src": "1165:9:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 7905
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 7838,
                          "type": "uint256",
                          "value": "solutionsCount"
                        },
                        "id": 7906,
                        "name": "Identifier",
                        "src": "1192:14:7"
                      }
                    ],
                    "id": 7907,
                    "name": "Return",
                    "src": "1185:21:7"
                  }
                ],
                "id": 7908,
                "name": "Block",
                "src": "1175:38:7"
              }
            ],
            "id": 7909,
            "name": "FunctionDefinition",
            "src": "1116:97:7"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mintVerifySol",
              "scope": 7979,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "to",
                      "scope": 7978,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7910,
                        "name": "ElementaryTypeName",
                        "src": "1251:7:7"
                      }
                    ],
                    "id": 7911,
                    "name": "VariableDeclaration",
                    "src": "1251:10:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenId",
                      "scope": 7978,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7912,
                        "name": "ElementaryTypeName",
                        "src": "1271:7:7"
                      }
                    ],
                    "id": 7913,
                    "name": "VariableDeclaration",
                    "src": "1271:15:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "proof",
                      "scope": 7978,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Verifier.Proof",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Verifier.Proof",
                          "referencedDeclaration": 8575,
                          "type": "struct Verifier.Proof"
                        },
                        "id": 7914,
                        "name": "UserDefinedTypeName",
                        "src": "1296:14:7"
                      }
                    ],
                    "id": 7915,
                    "name": "VariableDeclaration",
                    "src": "1296:27:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "input",
                      "scope": 7978,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7916,
                            "name": "ElementaryTypeName",
                            "src": "1334:4:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7917,
                            "name": "Literal",
                            "src": "1339:1:7"
                          }
                        ],
                        "id": 7918,
                        "name": "ArrayTypeName",
                        "src": "1334:7:7"
                      }
                    ],
                    "id": 7919,
                    "name": "VariableDeclaration",
                    "src": "1334:20:7"
                  }
                ],
                "id": 7920,
                "name": "ParameterList",
                "src": "1241:119:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7921,
                "name": "ParameterList",
                "src": "1368:0:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7923
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "key",
                          "scope": 7977,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes32",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 7922,
                            "name": "ElementaryTypeName",
                            "src": "1378:7:7"
                          }
                        ],
                        "id": 7923,
                        "name": "VariableDeclaration",
                        "src": "1378:11:7"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 8910,
                              "type": "function (bytes memory) pure returns (bytes32)",
                              "value": "keccak256"
                            },
                            "id": 7924,
                            "name": "Identifier",
                            "src": "1392:9:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_G1Point_$7987_memory",
                                      "typeString": "struct Pairing.G1Point memory"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_G2Point_$7996_memory",
                                      "typeString": "struct Pairing.G2Point memory"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_G1Point_$7987_memory",
                                      "typeString": "struct Pairing.G1Point memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "encode",
                                  "referencedDeclaration": null,
                                  "type": "function () pure returns (bytes memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 8903,
                                      "type": "abi",
                                      "value": "abi"
                                    },
                                    "id": 7925,
                                    "name": "Identifier",
                                    "src": "1402:3:7"
                                  }
                                ],
                                "id": 7926,
                                "name": "MemberAccess",
                                "src": "1402:10:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "a",
                                  "referencedDeclaration": 8570,
                                  "type": "struct Pairing.G1Point memory"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7915,
                                      "type": "struct Verifier.Proof memory",
                                      "value": "proof"
                                    },
                                    "id": 7927,
                                    "name": "Identifier",
                                    "src": "1413:5:7"
                                  }
                                ],
                                "id": 7928,
                                "name": "MemberAccess",
                                "src": "1413:7:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "b",
                                  "referencedDeclaration": 8572,
                                  "type": "struct Pairing.G2Point memory"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7915,
                                      "type": "struct Verifier.Proof memory",
                                      "value": "proof"
                                    },
                                    "id": 7929,
                                    "name": "Identifier",
                                    "src": "1422:5:7"
                                  }
                                ],
                                "id": 7930,
                                "name": "MemberAccess",
                                "src": "1422:7:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "c",
                                  "referencedDeclaration": 8574,
                                  "type": "struct Pairing.G1Point memory"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7915,
                                      "type": "struct Verifier.Proof memory",
                                      "value": "proof"
                                    },
                                    "id": 7931,
                                    "name": "Identifier",
                                    "src": "1431:5:7"
                                  }
                                ],
                                "id": 7932,
                                "name": "MemberAccess",
                                "src": "1431:7:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7919,
                                  "type": "uint256[2] memory",
                                  "value": "input"
                                },
                                "id": 7933,
                                "name": "Identifier",
                                "src": "1440:5:7"
                              }
                            ],
                            "id": 7934,
                            "name": "FunctionCall",
                            "src": "1402:44:7"
                          }
                        ],
                        "id": 7935,
                        "name": "FunctionCall",
                        "src": "1392:55:7"
                      }
                    ],
                    "id": 7936,
                    "name": "VariableDeclarationStatement",
                    "src": "1378:69:7"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        7938
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "solutionResult",
                          "scope": 7977,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 7937,
                            "name": "ElementaryTypeName",
                            "src": "1457:4:7"
                          }
                        ],
                        "id": 7938,
                        "name": "VariableDeclaration",
                        "src": "1457:19:7"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Proof_$8575_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "verifyTx",
                              "referencedDeclaration": 8900,
                              "type": "function (struct Verifier.Proof memory,uint256[2] memory) view external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7809,
                                  "type": "contract Verifier",
                                  "value": "verifierContract"
                                },
                                "id": 7939,
                                "name": "Identifier",
                                "src": "1479:16:7"
                              }
                            ],
                            "id": 7940,
                            "name": "MemberAccess",
                            "src": "1479:25:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7915,
                              "type": "struct Verifier.Proof memory",
                              "value": "proof"
                            },
                            "id": 7941,
                            "name": "Identifier",
                            "src": "1505:5:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7919,
                              "type": "uint256[2] memory",
                              "value": "input"
                            },
                            "id": 7942,
                            "name": "Identifier",
                            "src": "1512:5:7"
                          }
                        ],
                        "id": 7943,
                        "name": "FunctionCall",
                        "src": "1479:39:7"
                      }
                    ],
                    "id": 7944,
                    "name": "VariableDeclarationStatement",
                    "src": "1457:61:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_f862245219e1b7d17340e15d76bf71ae45b4eb718df2620d5c3ed2687c882460",
                                  "typeString": "literal_string \"Solution is not unique\""
                                }
                              ],
                              "overloadedDeclarations": [
                                8919,
                                8920
                              ],
                              "referencedDeclaration": 8920,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7945,
                            "name": "Identifier",
                            "src": "1529:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "verifierAddress",
                                  "referencedDeclaration": 7831,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SolnSquareVerifier.Solutions storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7842,
                                          "type": "mapping(bytes32 => struct SolnSquareVerifier.Solutions storage ref)",
                                          "value": "uniqueSolutions"
                                        },
                                        "id": 7946,
                                        "name": "Identifier",
                                        "src": "1537:15:7"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7923,
                                          "type": "bytes32",
                                          "value": "key"
                                        },
                                        "id": 7947,
                                        "name": "Identifier",
                                        "src": "1553:3:7"
                                      }
                                    ],
                                    "id": 7948,
                                    "name": "IndexAccess",
                                    "src": "1537:20:7"
                                  }
                                ],
                                "id": 7949,
                                "name": "MemberAccess",
                                "src": "1537:36:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)",
                                      "value": "address"
                                    },
                                    "id": 7950,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "1577:7:7"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 7951,
                                    "name": "Literal",
                                    "src": "1585:1:7"
                                  }
                                ],
                                "id": 7952,
                                "name": "FunctionCall",
                                "src": "1577:10:7"
                              }
                            ],
                            "id": 7953,
                            "name": "BinaryOperation",
                            "src": "1537:50:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "536f6c7574696f6e206973206e6f7420756e69717565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Solution is not unique\"",
                              "value": "Solution is not unique"
                            },
                            "id": 7954,
                            "name": "Literal",
                            "src": "1589:24:7"
                          }
                        ],
                        "id": 7955,
                        "name": "FunctionCall",
                        "src": "1529:85:7"
                      }
                    ],
                    "id": 7956,
                    "name": "ExpressionStatement",
                    "src": "1529:85:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_627311e9f23e710f0159ab908e296b4ddc838b15666578fbf8ab092285383469",
                                  "typeString": "literal_string \"Proof is not valid\""
                                }
                              ],
                              "overloadedDeclarations": [
                                8919,
                                8920
                              ],
                              "referencedDeclaration": 8920,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7957,
                            "name": "Identifier",
                            "src": "1624:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7938,
                                  "type": "bool",
                                  "value": "solutionResult"
                                },
                                "id": 7958,
                                "name": "Identifier",
                                "src": "1632:14:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "74727565",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "true"
                                },
                                "id": 7959,
                                "name": "Literal",
                                "src": "1650:4:7"
                              }
                            ],
                            "id": 7960,
                            "name": "BinaryOperation",
                            "src": "1632:22:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "50726f6f66206973206e6f742076616c6964",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Proof is not valid\"",
                              "value": "Proof is not valid"
                            },
                            "id": 7961,
                            "name": "Literal",
                            "src": "1656:20:7"
                          }
                        ],
                        "id": 7962,
                        "name": "FunctionCall",
                        "src": "1624:53:7"
                      }
                    ],
                    "id": 7963,
                    "name": "ExpressionStatement",
                    "src": "1624:53:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7901,
                              "type": "function (uint256,address,bytes32)",
                              "value": "createSolution"
                            },
                            "id": 7964,
                            "name": "Identifier",
                            "src": "1688:14:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7913,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 7965,
                            "name": "Identifier",
                            "src": "1703:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7911,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 7966,
                            "name": "Identifier",
                            "src": "1712:2:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7923,
                              "type": "bytes32",
                              "value": "key"
                            },
                            "id": 7967,
                            "name": "Identifier",
                            "src": "1716:3:7"
                          }
                        ],
                        "id": 7968,
                        "name": "FunctionCall",
                        "src": "1688:32:7"
                      }
                    ],
                    "id": 7969,
                    "name": "ExpressionStatement",
                    "src": "1688:32:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "mint",
                              "referencedDeclaration": 1474,
                              "type": "function (address,uint256) returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8971,
                                  "type": "contract super SolnSquareVerifier",
                                  "value": "super"
                                },
                                "id": 7970,
                                "name": "Identifier",
                                "src": "1730:5:7"
                              }
                            ],
                            "id": 7972,
                            "name": "MemberAccess",
                            "src": "1730:10:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7911,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 7973,
                            "name": "Identifier",
                            "src": "1741:2:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7913,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 7974,
                            "name": "Identifier",
                            "src": "1745:7:7"
                          }
                        ],
                        "id": 7975,
                        "name": "FunctionCall",
                        "src": "1730:23:7"
                      }
                    ],
                    "id": 7976,
                    "name": "ExpressionStatement",
                    "src": "1730:23:7"
                  }
                ],
                "id": 7977,
                "name": "Block",
                "src": "1368:392:7"
              }
            ],
            "id": 7978,
            "name": "FunctionDefinition",
            "src": "1219:541:7"
          }
        ],
        "id": 7979,
        "name": "ContractDefinition",
        "src": "125:1637:7"
      }
    ],
    "id": 7980,
    "name": "SourceUnit",
    "src": "0:1793:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0xf46853D711EdFb4CCa90f60cEeEcB1D78c056EC9",
      "transactionHash": "0xd89e3dd7afb7226674b8543f8fe95395ecf08ca32b8a150569614b540633d6f0"
    }
  },
  "schemaVersion": "3.4.5",
  "updatedAt": "2022-07-14T16:08:24.172Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}